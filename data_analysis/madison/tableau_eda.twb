<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='national_MRA' inline='true' name='federated.1aslvka1o0nnuj146cuy40ygunhe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='national_MRA' name='textscan.0021zsf0ibnoih1buuikw0ly1gpn'>
            <connection class='textscan' directory='D:/Projects/ict-food-cost-planner-project/data_sources/raw_data' filename='national_MRA.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0021zsf0ibnoih1buuikw0ly1gpn' name='national_MRA.csv' table='[national_MRA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' name='product' ordinal='3' />
            <column datatype='string' name='vectorid' ordinal='4' />
            <column datatype='real' name='price' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0021zsf0ibnoih1buuikw0ly1gpn' name='national_MRA.csv' table='[national_MRA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='string' name='product' ordinal='3' />
              <column datatype='string' name='vectorid' ordinal='4' />
              <column datatype='real' name='price' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0021zsf0ibnoih1buuikw0ly1gpn' name='provincial_MRA.csv' table='[provincial_MRA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='string' name='product' ordinal='3' />
              <column datatype='string' name='vectorid' ordinal='4' />
              <column datatype='real' name='price' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (provincial_MRA.csv)]' value='[provincial_MRA.csv].[F1]' />
          <map key='[F1]' value='[national_MRA.csv].[F1]' />
          <map key='[date (provincial_MRA.csv)]' value='[provincial_MRA.csv].[date]' />
          <map key='[date]' value='[national_MRA.csv].[date]' />
          <map key='[location (provincial_MRA.csv)]' value='[provincial_MRA.csv].[location]' />
          <map key='[location]' value='[national_MRA.csv].[location]' />
          <map key='[price (provincial_MRA.csv)]' value='[provincial_MRA.csv].[price]' />
          <map key='[price]' value='[national_MRA.csv].[price]' />
          <map key='[product (provincial_MRA.csv)]' value='[provincial_MRA.csv].[product]' />
          <map key='[product]' value='[national_MRA.csv].[product]' />
          <map key='[vectorid (provincial_MRA.csv)]' value='[provincial_MRA.csv].[vectorid]' />
          <map key='[vectorid]' value='[national_MRA.csv].[vectorid]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>product</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vectorid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vectorid]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>vectorid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[national_MRA.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>product</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vectorid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vectorid (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>vectorid</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (provincial_MRA.csv)]</local-name>
            <parent-name>[provincial_MRA.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='F1 (provincial MRA.csv)' datatype='integer' name='[F1 (provincial_MRA.csv)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[product]' new-bin='true'>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Apple juice, 1.36 litres&quot;</value>
            <value>&quot;Coffee, instant, 200 grams&quot;</value>
            <value>&quot;Coffee, roasted, 300 grams&quot;</value>
            <value>&quot;Fruit flavoured crystals, 2.25 litres&quot;</value>
            <value>&quot;Orange juice, 1 litre&quot;</value>
            <value>&quot;Soft drinks, cola type, 2 litres&quot;</value>
            <value>&quot;Soft drinks, lemon-lime type, 2 litres&quot;</value>
            <value>&quot;Tea (72 bags)&quot;</value>
            <value>&quot;Tomato juice, 1.36 litres&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Canned goods&quot;'>
            <value>&quot;Baked beans, canned, 398 millilitres&quot;</value>
            <value>&quot;Soup, canned, 284 millilitres&quot;</value>
            <value>&quot;Tomatoes, canned, 796 millilitres&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Condiments&quot;'>
            <value>&quot;Cooking or salad oil, 1 litre&quot;</value>
            <value>&quot;Ketchup, 1 litre&quot;</value>
            <value>&quot;Peanut butter, 500 grams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Dairy&quot;'>
            <value>&quot;Butter, 454 grams&quot;</value>
            <value>&quot;Eggs, 1 dozen&quot;</value>
            <value>&quot;Evaporated milk, 385 millilitres&quot;</value>
            <value>&quot;Homogenized milk, 1 litre&quot;</value>
            <value>&quot;Homogenized milk, 4 litres&quot;</value>
            <value>&quot;Partly skimmed milk, 1 litre&quot;</value>
            <value>&quot;Partly skimmed milk, 4 litres&quot;</value>
            <value>&quot;Processed cheese slices, 250 grams&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fruit &amp; Veg&quot;'>
            <value>&quot;Apples, 1 kilogram&quot;</value>
            <value>&quot;Bananas, 1 kilogram&quot;</value>
            <value>&quot;Cabbage, 1 kilogram&quot;</value>
            <value>&quot;Carrots, 1 kilogram&quot;</value>
            <value>&quot;Celery, 1 kilogram&quot;</value>
            <value>&quot;French fried potatoes, frozen, 1 kilogram&quot;</value>
            <value>&quot;Grapefruits, 1 kilogram&quot;</value>
            <value>&quot;Mushrooms, 1 kilogram&quot;</value>
            <value>&quot;Onions, 1 kilogram&quot;</value>
            <value>&quot;Oranges, 1 kilogram&quot;</value>
            <value>&quot;Potatoes, 4.54 kilograms&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Grains &amp; Carbs&quot;'>
            <value>&quot;Bread, 675 grams&quot;</value>
            <value>&quot;Corn flakes, 675 grams&quot;</value>
            <value>&quot;Flour, 2.5 kilograms&quot;</value>
            <value>&quot;Macaroni, 500 grams&quot;</value>
            <value>&quot;Soda crackers, 450 grams&quot;</value>
            <value>&quot;Sugar, white, 2 kilograms&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Meat&quot;'>
            <value>&quot;Bacon, 500 grams&quot;</value>
            <value>&quot;Blade roast, 1 kilogram&quot;</value>
            <value>&quot;Butt roast, 1 kilogram&quot;</value>
            <value>&quot;Canned salmon, 213 grams&quot;</value>
            <value>&quot;Chicken, 1 kilogram&quot;</value>
            <value>&quot;Ground beef, 1 kilogram&quot;</value>
            <value>&quot;Pork chops, 1 kilogram&quot;</value>
            <value>&quot;Prime rib roast, 1 kilogram&quot;</value>
            <value>&quot;Round steak, 1 kilogram&quot;</value>
            <value>&quot;Sirloin steak, 1 kilogram&quot;</value>
            <value>&quot;Stewing beef, 1 kilogram&quot;</value>
            <value>&quot;Wieners, 450 grams&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='national_MRA.csv' datatype='table' name='[__tableau_internal_object_id__].[national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='provincial_MRA.csv' datatype='table' name='[__tableau_internal_object_id__].[provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5]' role='measure' type='quantitative' />
      <column caption='date (provincial MRA.csv)' datatype='date' name='[date (provincial_MRA.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='location (provincial MRA.csv)' datatype='string' name='[location (provincial_MRA.csv)]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='price (provincial MRA.csv)' datatype='real' name='[price (provincial_MRA.csv)]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='product (provincial MRA.csv)' datatype='string' name='[product (provincial_MRA.csv)]' role='dimension' type='nominal' />
      <column caption='Product' datatype='string' name='[product]' role='dimension' type='nominal' />
      <column caption='vectorid (provincial MRA.csv)' datatype='string' name='[vectorid (provincial_MRA.csv)]' role='dimension' type='nominal' />
      <column caption='Vectorid' datatype='string' name='[vectorid]' role='dimension' type='nominal' />
      <column-instance column='[product (provincial_MRA.csv)]' derivation='None' name='[none:product (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[product]' derivation='None' name='[none:product:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product (provincial_MRA.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beef striploin cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cereal, 400 grams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frozen spinach, 300 grams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Orange juice, 2 litres&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soy milk, 1.89 litres&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Almonds, 200 grams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canned salmon, 213 grams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flatbread and pita, 500 grams &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Milk, 1 litre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Potatoes, per kilogram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White sugar, 2 kilograms&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacon, 500 grams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canola oil, 3 litres&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frozen green beans, 750 grams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nut milk, 1.89 litres&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salad greens, 142 grams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brown rice, 900 grams &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cookies and sweet biscuits, 300 grams &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hummus, 227 grams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peanut butter, 1 kilogram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweet potatoes, per kilogram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beef top sirloin cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicken breasts, per kilogram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frozen strawberries, 600 grams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oranges, 1.36 kilograms&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Squash, per kilogram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bananas, per kilogram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cantaloupe, unit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frozen mixed vegetables, 750 grams &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Olive oil, 1 litre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salmon, per kilogram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canned peach, 398 millilitres&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dry or fresh pasta, 500 grams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mayonnaise, 890 millilitres &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pork shoulder cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;White bread, 675 grams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apple juice, 2 litres&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canned soup, 284 millilitres&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frozen broccoli, 500 grams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milk, 2 litres&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roasted or ground coffee, 340 grams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whole chicken, per kilogram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canned beans and lentils, 540 millilitres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dried lentils, 900 grams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Limes, unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pork loin cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vegetable oil, 3 litres&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beef rib cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carrots, 1.36 kilograms&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frozen peas, 750 grams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Onions, 1.36 kilograms&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Salsa, 418 millilitres&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Butter, 454 grams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crackers and crisp breads, 200 grams &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceberg lettuce, unit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peanuts, 450 grams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tea (20 bags)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabbage, per kilogram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cream, 1 litre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ketchup, 1 litre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pears, per kilogram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tofu, 350 grams &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canned corn, 341 millilitres&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dry beans and legumes, 900 grams &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Margarine, 907 grams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pork rib cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheat flour, 2.5 kilograms&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canned pear, 398 millilitres&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eggs, 1 dozen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meatless burgers, 226 grams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Potatoes, 4.54 kilograms&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;White rice, 2 kilograms&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Block cheese, 500 grams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicken drumsticks, per kilogram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grapes, per kilogram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oranges, per kilogram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Strawberries, 454 grams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beef stewing cuts, per kilogram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Celery, unit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frozen pizza, 390 grams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Onions, per kilogram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shrimp, 300 grams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apples, per kilogram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canned tomatoes, 796 millilitres&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frozen corn, 750 grams &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk, 4 litres&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romaine lettuce, unit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wieners, 400 grams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canned baked beans, 398 millilitres&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cucumber, unit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lemons, unit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peppers, per kilogram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tomatoes, per kilogram&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broccoli, unit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chicken thigh, per kilogram&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ground beef, per kilogram&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasta sauce, 650 millilitres&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunflower seeds, 400 grams &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avocado, unit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canned tuna, 170 grams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frozen french fried potatoes, 750 grams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mushrooms, 227 grams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salad dressing, 475 millilitres&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yogurt, 500 grams&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:product:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Apple juice, 1.36 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Canned salmon, 213 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Flour, 2.5 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Onions, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Round steak, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tomatoes, canned, 796 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cabbage, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Evaporated milk, 385 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mushrooms, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Processed cheese slices, 250 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tomato juice, 1.36 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Baked beans, canned, 398 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Chicken, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Grapefruits, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Partly skimmed milk, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Soft drinks, cola type, 2 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bread, 675 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cooking or salad oil, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Homogenized milk, 4 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Pork chops, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Stewing beef, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bacon, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Celery, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Fruit flavoured crystals, 2.25 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Oranges, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Soda crackers, 450 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Apples, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Carrots, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;French fried potatoes, frozen, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Orange juice, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sirloin steak, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Wieners, 450 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Butt roast, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Corn flakes, 675 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ketchup, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Potatoes, 4.54 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sugar, white, 2 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Butter, 454 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Eggs, 1 dozen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Macaroni, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Prime rib roast, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Tea (72 bags)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Blade roast, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Coffee, roasted, 300 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Homogenized milk, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Peanut butter, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Soup, canned, 284 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bananas, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Coffee, instant, 200 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ground beef, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Partly skimmed milk, 4 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Soft drinks, lemon-lime type, 2 litres&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:product (provincial_MRA.csv):nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Almonds, 200 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Block cheese, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Canned salmon, 213 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Chicken drumsticks, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Flatbread and pita, 500 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Grapes, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Milk, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Oranges, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Potatoes, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Strawberries, 454 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;White sugar, 2 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Beef top sirloin cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Canned pear, 398 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Chicken breasts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Eggs, 1 dozen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Frozen strawberries, 600 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Meatless burgers, 226 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Oranges, 1.36 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Potatoes, 4.54 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Squash, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;White rice, 2 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Avocado, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Butter, 454 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Canned tuna, 170 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Crackers and crisp breads, 200 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Frozen french fried potatoes, 750 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Iceberg lettuce, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mushrooms, 227 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Peanuts, 450 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Salad dressing, 475 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tea (20 bags)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Yogurt, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Beef rib cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Canned beans and lentils, 540 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Carrots, 1.36 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Dried lentils, 900 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Frozen peas, 750 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Limes, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Onions, 1.36 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Pork loin cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Salsa, 418 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Vegetable oil, 3 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Apples, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brown rice, 900 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Canned tomatoes, 796 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cookies and sweet biscuits, 300 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Frozen corn, 750 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Hummus, 227 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Milk, 4 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Peanut butter, 1 kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Romaine lettuce, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Sweet potatoes, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Wieners, 400 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Apple juice, 2 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Broccoli, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Canned soup, 284 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Chicken thigh, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Frozen broccoli, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ground beef, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Milk, 2 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Pasta sauce, 650 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Roasted or ground coffee, 340 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sunflower seeds, 400 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Whole chicken, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Beef stewing cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Canned corn, 341 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Celery, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Dry beans and legumes, 900 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Frozen pizza, 390 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Margarine, 907 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Onions, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Pork rib cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Shrimp, 300 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Wheat flour, 2.5 kilograms&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Beef striploin cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Canned peach, 398 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cereal, 400 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dry or fresh pasta, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Frozen spinach, 300 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mayonnaise, 890 millilitres &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Orange juice, 2 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pork shoulder cuts, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Soy milk, 1.89 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;White bread, 675 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bananas, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Canned baked beans, 398 millilitres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cantaloupe, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cucumber, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Frozen mixed vegetables, 750 grams &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Lemons, unit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Olive oil, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Peppers, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Salmon, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Tomatoes, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bacon, 500 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cabbage, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Canola oil, 3 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cream, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Frozen green beans, 750 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ketchup, 1 litre&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Nut milk, 1.89 litres&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Pears, per kilogram&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Salad greens, 142 grams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tofu, 350 grams &quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='national_MRA.csv' id='national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3'>
            <properties context=''>
              <relation connection='textscan.0021zsf0ibnoih1buuikw0ly1gpn' name='national_MRA.csv' table='[national_MRA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' name='product' ordinal='3' />
                  <column datatype='string' name='vectorid' ordinal='4' />
                  <column datatype='real' name='price' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='provincial_MRA.csv' id='provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5'>
            <properties context=''>
              <relation connection='textscan.0021zsf0ibnoih1buuikw0ly1gpn' name='provincial_MRA.csv' table='[provincial_MRA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' name='product' ordinal='3' />
                  <column datatype='string' name='vectorid' ordinal='4' />
                  <column datatype='real' name='price' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[date (provincial_MRA.csv)]' />
            </expression>
            <first-end-point object-id='national_MRA.csv_4F84576D2B9D4967BE0158F7954E27F3' />
            <second-end-point object-id='provincial_MRA.csv_A393A0341DCA4915B5A03457427AC7B5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='National max/min'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column datatype='string' name='[Product (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[product]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Apple juice, 1.36 litres&quot;</value>
                  <value>&quot;Coffee, instant, 200 grams&quot;</value>
                  <value>&quot;Coffee, roasted, 300 grams&quot;</value>
                  <value>&quot;Fruit flavoured crystals, 2.25 litres&quot;</value>
                  <value>&quot;Orange juice, 1 litre&quot;</value>
                  <value>&quot;Soft drinks, cola type, 2 litres&quot;</value>
                  <value>&quot;Soft drinks, lemon-lime type, 2 litres&quot;</value>
                  <value>&quot;Tea (72 bags)&quot;</value>
                  <value>&quot;Tomato juice, 1.36 litres&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Canned goods&quot;'>
                  <value>&quot;Baked beans, canned, 398 millilitres&quot;</value>
                  <value>&quot;Soup, canned, 284 millilitres&quot;</value>
                  <value>&quot;Tomatoes, canned, 796 millilitres&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Condiments&quot;'>
                  <value>&quot;Cooking or salad oil, 1 litre&quot;</value>
                  <value>&quot;Ketchup, 1 litre&quot;</value>
                  <value>&quot;Peanut butter, 500 grams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dairy&quot;'>
                  <value>&quot;Butter, 454 grams&quot;</value>
                  <value>&quot;Eggs, 1 dozen&quot;</value>
                  <value>&quot;Evaporated milk, 385 millilitres&quot;</value>
                  <value>&quot;Homogenized milk, 1 litre&quot;</value>
                  <value>&quot;Homogenized milk, 4 litres&quot;</value>
                  <value>&quot;Partly skimmed milk, 1 litre&quot;</value>
                  <value>&quot;Partly skimmed milk, 4 litres&quot;</value>
                  <value>&quot;Processed cheese slices, 250 grams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruit &amp; Veg&quot;'>
                  <value>&quot;Apples, 1 kilogram&quot;</value>
                  <value>&quot;Bananas, 1 kilogram&quot;</value>
                  <value>&quot;Cabbage, 1 kilogram&quot;</value>
                  <value>&quot;Carrots, 1 kilogram&quot;</value>
                  <value>&quot;Celery, 1 kilogram&quot;</value>
                  <value>&quot;French fried potatoes, frozen, 1 kilogram&quot;</value>
                  <value>&quot;Grapefruits, 1 kilogram&quot;</value>
                  <value>&quot;Mushrooms, 1 kilogram&quot;</value>
                  <value>&quot;Onions, 1 kilogram&quot;</value>
                  <value>&quot;Oranges, 1 kilogram&quot;</value>
                  <value>&quot;Potatoes, 4.54 kilograms&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains &amp; Carbs&quot;'>
                  <value>&quot;Bread, 675 grams&quot;</value>
                  <value>&quot;Corn flakes, 675 grams&quot;</value>
                  <value>&quot;Flour, 2.5 kilograms&quot;</value>
                  <value>&quot;Macaroni, 500 grams&quot;</value>
                  <value>&quot;Soda crackers, 450 grams&quot;</value>
                  <value>&quot;Sugar, white, 2 kilograms&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bacon, 500 grams&quot;</value>
                  <value>&quot;Blade roast, 1 kilogram&quot;</value>
                  <value>&quot;Butt roast, 1 kilogram&quot;</value>
                  <value>&quot;Canned salmon, 213 grams&quot;</value>
                  <value>&quot;Chicken, 1 kilogram&quot;</value>
                  <value>&quot;Ground beef, 1 kilogram&quot;</value>
                  <value>&quot;Pork chops, 1 kilogram&quot;</value>
                  <value>&quot;Prime rib roast, 1 kilogram&quot;</value>
                  <value>&quot;Round steak, 1 kilogram&quot;</value>
                  <value>&quot;Sirloin steak, 1 kilogram&quot;</value>
                  <value>&quot;Stewing beef, 1 kilogram&quot;</value>
                  <value>&quot;Wieners, 450 grams&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[price]' derivation='Max' name='[max:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Min' name='[min:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product]' derivation='None' name='[none:product:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product' datatype='string' name='[product]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]'>
            <groupfilter function='member' level='[Product (group)]' member='&quot;Meat&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]'>
            <groupfilter function='member' level='[none:product:nk]' member='&quot;Bacon, 500 grams&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:date:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]</column>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]</column>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1aslvka1o0nnuj146cuy40ygunhe].[min:price:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1aslvka1o0nnuj146cuy40ygunhe].[max:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1aslvka1o0nnuj146cuy40ygunhe].[min:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1aslvka1o0nnuj146cuy40ygunhe].[max:price:qk] + [federated.1aslvka1o0nnuj146cuy40ygunhe].[min:price:qk])</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{54EC9619-0CE9-4FAD-B1EA-938240355935}' />
    </worksheet>
    <worksheet name='National_MRA'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[product]' derivation='None' name='[none:product:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product' datatype='string' name='[product]' role='dimension' type='nominal' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1aslvka1o0nnuj146cuy40ygunhe].[sum:price:qk]</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{9E15EE1B-BA3E-42D6-90B6-262F551330F1}' />
    </worksheet>
    <worksheet name='National_seasonality'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product]' derivation='None' name='[none:product:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product' datatype='string' name='[product]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
              <lod column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1aslvka1o0nnuj146cuy40ygunhe].[avg:price:qk]</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{605DBC73-3EA8-41AA-B7E8-C5081E5AD621}' />
    </worksheet>
    <worksheet name='Provincial max/min'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column caption='date (provincial MRA.csv)' datatype='date' name='[date (provincial_MRA.csv)]' role='dimension' type='ordinal' />
            <column caption='location (provincial MRA.csv)' datatype='string' name='[location (provincial_MRA.csv)]' role='dimension' type='nominal' />
            <column-instance column='[price (provincial_MRA.csv)]' derivation='Max' name='[max:price (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[price (provincial_MRA.csv)]' derivation='Min' name='[min:price (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[location (provincial_MRA.csv)]' derivation='None' name='[none:location (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[product (provincial_MRA.csv)]' derivation='None' name='[none:product (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column caption='price (provincial MRA.csv)' datatype='real' name='[price (provincial_MRA.csv)]' role='measure' type='quantitative' />
            <column caption='product (provincial MRA.csv)' datatype='string' name='[product (provincial_MRA.csv)]' role='dimension' type='nominal' />
            <column-instance column='[date (provincial_MRA.csv)]' derivation='Month-Trunc' name='[tmn:date (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (provincial_MRA.csv)]' derivation='Year' name='[yr:date (provincial_MRA.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]'>
            <groupfilter function='member' level='[none:location (provincial_MRA.csv):nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]'>
            <groupfilter function='member' level='[none:product (provincial_MRA.csv):nk]' member='&quot;Bacon, 500 grams&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date (provincial_MRA.csv):ok]'>
            <groupfilter from='2017' function='range' level='[yr:date (provincial_MRA.csv):ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]</column>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</column>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date (provincial_MRA.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1aslvka1o0nnuj146cuy40ygunhe].[max:price (provincial_MRA.csv):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1aslvka1o0nnuj146cuy40ygunhe].[min:price (provincial_MRA.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1aslvka1o0nnuj146cuy40ygunhe].[max:price (provincial_MRA.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1aslvka1o0nnuj146cuy40ygunhe].[min:price (provincial_MRA.csv):qk] + [federated.1aslvka1o0nnuj146cuy40ygunhe].[max:price (provincial_MRA.csv):qk])</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[tmn:date (provincial_MRA.csv):qk]</cols>
      </table>
      <simple-id uuid='{9F1BF515-0415-425B-8E54-04916FCB0754}' />
    </worksheet>
    <worksheet name='Provincial_MRA'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column-instance column='[price (provincial_MRA.csv)]' derivation='Avg' name='[avg:price (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
            <column caption='date (provincial MRA.csv)' datatype='date' name='[date (provincial_MRA.csv)]' role='dimension' type='ordinal' />
            <column caption='location (provincial MRA.csv)' datatype='string' name='[location (provincial_MRA.csv)]' role='dimension' type='nominal' />
            <column-instance column='[location (provincial_MRA.csv)]' derivation='None' name='[none:location (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[product (provincial_MRA.csv)]' derivation='None' name='[none:product (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column caption='price (provincial MRA.csv)' datatype='real' name='[price (provincial_MRA.csv)]' role='measure' type='quantitative' />
            <column caption='product (provincial MRA.csv)' datatype='string' name='[product (provincial_MRA.csv)]' role='dimension' type='nominal' />
            <column-instance column='[date (provincial_MRA.csv)]' derivation='Month-Trunc' name='[tmn:date (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]'>
            <groupfilter function='level-members' level='[none:location (provincial_MRA.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1aslvka1o0nnuj146cuy40ygunhe].[avg:price (provincial_MRA.csv):qk]</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[tmn:date (provincial_MRA.csv):qk]</cols>
      </table>
      <simple-id uuid='{71B36C65-C5E1-4D91-BE29-38887B015ADF}' />
    </worksheet>
    <worksheet name='Provincial_seasonality'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column-instance column='[price (provincial_MRA.csv)]' derivation='Avg' name='[avg:price (provincial_MRA.csv):qk]' pivot='key' type='quantitative' />
            <column caption='date (provincial MRA.csv)' datatype='date' name='[date (provincial_MRA.csv)]' role='dimension' type='ordinal' />
            <column caption='location (provincial MRA.csv)' datatype='string' name='[location (provincial_MRA.csv)]' role='dimension' type='nominal' />
            <column-instance column='[date (provincial_MRA.csv)]' derivation='Month' name='[mn:date (provincial_MRA.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[location (provincial_MRA.csv)]' derivation='None' name='[none:location (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[product (provincial_MRA.csv)]' derivation='None' name='[none:product (provincial_MRA.csv):nk]' pivot='key' type='nominal' />
            <column caption='price (provincial MRA.csv)' datatype='real' name='[price (provincial_MRA.csv)]' role='measure' type='quantitative' />
            <column caption='product (provincial MRA.csv)' datatype='string' name='[product (provincial_MRA.csv)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]'>
            <groupfilter function='level-members' level='[none:location (provincial_MRA.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
              <lod column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1aslvka1o0nnuj146cuy40ygunhe].[avg:price (provincial_MRA.csv):qk]</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[mn:date (provincial_MRA.csv):ok]</cols>
      </table>
      <simple-id uuid='{C7DA4BB8-FDFA-4CD5-A3CE-983737DFAF40}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='national_MRA' name='federated.1aslvka1o0nnuj146cuy40ygunhe' />
          </datasources>
          <datasource-dependencies datasource='federated.1aslvka1o0nnuj146cuy40ygunhe'>
            <column datatype='string' name='[Product (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[product]' new-bin='true'>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Apple juice, 1.36 litres&quot;</value>
                  <value>&quot;Coffee, instant, 200 grams&quot;</value>
                  <value>&quot;Coffee, roasted, 300 grams&quot;</value>
                  <value>&quot;Fruit flavoured crystals, 2.25 litres&quot;</value>
                  <value>&quot;Orange juice, 1 litre&quot;</value>
                  <value>&quot;Soft drinks, cola type, 2 litres&quot;</value>
                  <value>&quot;Soft drinks, lemon-lime type, 2 litres&quot;</value>
                  <value>&quot;Tea (72 bags)&quot;</value>
                  <value>&quot;Tomato juice, 1.36 litres&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Canned goods&quot;'>
                  <value>&quot;Baked beans, canned, 398 millilitres&quot;</value>
                  <value>&quot;Soup, canned, 284 millilitres&quot;</value>
                  <value>&quot;Tomatoes, canned, 796 millilitres&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Condiments&quot;'>
                  <value>&quot;Cooking or salad oil, 1 litre&quot;</value>
                  <value>&quot;Ketchup, 1 litre&quot;</value>
                  <value>&quot;Peanut butter, 500 grams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dairy&quot;'>
                  <value>&quot;Butter, 454 grams&quot;</value>
                  <value>&quot;Eggs, 1 dozen&quot;</value>
                  <value>&quot;Evaporated milk, 385 millilitres&quot;</value>
                  <value>&quot;Homogenized milk, 1 litre&quot;</value>
                  <value>&quot;Homogenized milk, 4 litres&quot;</value>
                  <value>&quot;Partly skimmed milk, 1 litre&quot;</value>
                  <value>&quot;Partly skimmed milk, 4 litres&quot;</value>
                  <value>&quot;Processed cheese slices, 250 grams&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fruit &amp; Veg&quot;'>
                  <value>&quot;Apples, 1 kilogram&quot;</value>
                  <value>&quot;Bananas, 1 kilogram&quot;</value>
                  <value>&quot;Cabbage, 1 kilogram&quot;</value>
                  <value>&quot;Carrots, 1 kilogram&quot;</value>
                  <value>&quot;Celery, 1 kilogram&quot;</value>
                  <value>&quot;French fried potatoes, frozen, 1 kilogram&quot;</value>
                  <value>&quot;Grapefruits, 1 kilogram&quot;</value>
                  <value>&quot;Mushrooms, 1 kilogram&quot;</value>
                  <value>&quot;Onions, 1 kilogram&quot;</value>
                  <value>&quot;Oranges, 1 kilogram&quot;</value>
                  <value>&quot;Potatoes, 4.54 kilograms&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Grains &amp; Carbs&quot;'>
                  <value>&quot;Bread, 675 grams&quot;</value>
                  <value>&quot;Corn flakes, 675 grams&quot;</value>
                  <value>&quot;Flour, 2.5 kilograms&quot;</value>
                  <value>&quot;Macaroni, 500 grams&quot;</value>
                  <value>&quot;Soda crackers, 450 grams&quot;</value>
                  <value>&quot;Sugar, white, 2 kilograms&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Meat&quot;'>
                  <value>&quot;Bacon, 500 grams&quot;</value>
                  <value>&quot;Blade roast, 1 kilogram&quot;</value>
                  <value>&quot;Butt roast, 1 kilogram&quot;</value>
                  <value>&quot;Canned salmon, 213 grams&quot;</value>
                  <value>&quot;Chicken, 1 kilogram&quot;</value>
                  <value>&quot;Ground beef, 1 kilogram&quot;</value>
                  <value>&quot;Pork chops, 1 kilogram&quot;</value>
                  <value>&quot;Prime rib roast, 1 kilogram&quot;</value>
                  <value>&quot;Round steak, 1 kilogram&quot;</value>
                  <value>&quot;Sirloin steak, 1 kilogram&quot;</value>
                  <value>&quot;Stewing beef, 1 kilogram&quot;</value>
                  <value>&quot;Wieners, 450 grams&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Product' datatype='string' name='[product]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1aslvka1o0nnuj146cuy40ygunhe].[avg:price:qk]</rows>
        <cols>[federated.1aslvka1o0nnuj146cuy40ygunhe].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{2F80F547-DC39-4DAA-8B0F-E7761AEC7E7D}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='National_MRA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA14BD28-7B30-4CC0-91C5-F9E64299684F}' />
    </window>
    <window class='worksheet' name='Provincial_MRA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date (provincial_MRA.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A240317-0CAE-46A9-B6E0-880F9A8A6129}' />
    </window>
    <window class='worksheet' name='National_seasonality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C036223B-2789-4306-B8D0-9B0DE353C072}' />
    </window>
    <window class='worksheet' name='Provincial_seasonality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date (provincial_MRA.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E63F001-07F8-4484-8C20-A9F396372AFD}' />
    </window>
    <window class='worksheet' name='National max/min'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]' type='filter' />
            <card pane-specification-id='2' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]&#10;[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product:nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{371ADC30-9D27-4004-8D90-C6246109C1B5}' />
    </window>
    <window class='worksheet' name='Provincial max/min'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]&#10;[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[:Measure Names]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:location (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[none:product (provincial_MRA.csv):nk]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date (provincial_MRA.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCE823A5-3199-4B54-B57C-497E36A260F5}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[Product (group)]</field>
            <field>[federated.1aslvka1o0nnuj146cuy40ygunhe].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EEE3898-502E-4D8A-87A4-F909BFA53BA5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='National max/min' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATGUlEQVR4nO3daXcc1Z3H8W/1vre61epuLZa8YZvVgAMEsw0hMJkEyEnOHEjm5PG8Dt7L
      nEnmkAyBQIAQhgMMBhKMMeAFG9napVbvS/VW1VV3HhB7AMm23G5Lluv/eWRL1XX/pb6/qrrV
      fas0pZRCCIfyAEgGhFN5LvxD1/W+V9JqtQiFQgMpSIjN5AHQNI1oNHpVL1yaP0/b8rB31yTA
      Vb9eiBuB58qLXOKFHi+l1SK7pyawbZterzfIuoTYFH0HwOf1Mj4xjsvlwuVy4fH0vSohtkzf
      vTYxkiUxyEqE2AKurS5AiK0kARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4m
      ARCOJgEQjiYBEI4mARCOJgEQjtZ3AJr1CrlCeZC1CLHp+p4Qs7q6im5AenhIpkSKbavvAHzT
      6S2ZEim2NW0QN8ZqNBpyVwixLckgWDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgTg
      Wyy7x1fVLzEsY6tLEZtEvr/wD7pZ5+2lV/G6fCw353l87KdomrbVZYk+KKVYbs1jK5u4L0nQ
      E8KtuXFpa/f3jg+AUop5/Twf5d/l0exTjIYmeGvxFc43zrIntn+ryxN9WGjO8En+A7KhcWrG
      Mdq9JjY22eA4D2efQPtWEBz9XSBLWfwt/z7lTpEnxn9G0PPNY546vTavzP2WpyefJ+yNbHGV
      /en02hQ7qxi2gWkbmLZJ0BNkV3TfunvCjbKVzanK52SCo4wEswOseDA6Vps/zvwnP9/5a0Ke
      8MWfK6X4W/59esrkocwTF4/ujh4DfFr4EBcufjr5y4udHyDgCfJg5nHeXXkDW9lbWGF/bGXz
      2vyLzDS+ptTJ0+41AThXP8OnhQ/7fiiiaRv8z9JrFDs53ll+naXm3A31gEWlFO8uv8EPM499
      p/PDN48BeyD9KF2ry/HS3y/+3LEBaPV05vXz3DfyEC7Nveb3k5HdxH0JTpSPbUF11+Zs7SSj
      oQkeGX2S+9IPc3fqAe5I3sOPx5+h2M1zuvrFVXfcpqnz6tyLjIeneGz0Jzwz9Twfrb7L+cbZ
      6xoCpdSG1q+U4mztBF6Xj13RW9ZdRtM0/mnsJyw15zhbOwk4NABKKT4tfMTB4ftwuy49DHog
      /RhnayepdIubWN21MS2D46W/c2jk8JrfuTQXT44/y9naCWb16Q2vM9/O8ercf/FA+lFuSxxE
      0zRCnjDPTD3PyfKx7wTKsnvk2zk+L31CqVPoKxy2sql2yxwtHOGlmf/gr0t/omle/immDbPG
      8dInPDr61GWXc2tunpr4OSfKn7Ggz9wcY4CmqaP36qQDoxu6ctMw67y1+DK/2PmbK54PF9qr
      fJB7m2d3/gr3OkeKG83RwhG8Lh8Hh++75DJdq8Mrs7/j0dGnyIbGL7nchfP909XPeWri58R9
      ax+K1bNN3lx4mZgvRrvXotItkQpmyAbHWWzO0rW63Jt6kInw5HcGn9+nlKJqlDlZOc5Sc5ao
      N84t8dsZD09S7KxyJPcOdybv5fbEPWveY0tZ/Gn2dxzO/ohMcGwDfyVomTqvzf++/wDkVxZZ
      zFe59+AdWxYA0zY4Uf6M6fpp4r4EDbPOXclD7IntX/e0Br75Q7+z/Gd2R/exK7ZvQ+0cLRxB
      Q1t3r3ojaZoNXl/4b3658zeXPbIBNIwary/8gcOZHzEWnlwT7mq3zLsrb5IKZHgg/Shel/eS
      67KVxfn6WRL+YZL+ke900FKnwLHiRzTMOrcO3cVEZCchT/hie0opCp0cx4of0+rpHEodZiI8
      taZ+0zY5WvgA3dQ5nHkc3ayz0lpgtb1Czaiwb+h27h6+/6r+Xg2z3n8AbLPNcqHBWDZFo9Eg
      HA5f+UUDorCZqX/NZ5W/sSd2gDuHDuHW3OhmnS+qR1ltLXNL7DZuGzq4Jgg1o8J7uTd5ZvJX
      aGzsOr+tLF5deJFHMk+S9KeuxyYNxPu5t9gR2cWuyPrnwN9XMyt8VvqYQmeVtD/LvvgdpAIZ
      TlWPc14/w+H0j8gENrZHvZJWr8l04xQr7SWaPZ2AFiDlz5DrLBLyRjiYuI+RwJWvKs3oZzlV
      /ZyIN0Y2OM6IP0vCP7zh9/L7+g5Aq9HAF4ni0Tb3FMi0Dd5afIWgJ8yD6ccIetYGr2t1+aJ8
      lLnGNI+N/vPFy3VKKd5eepX9Q3cwGdl9Ve0W2rl/nAr9+oY8FSp28ny4+g5PTz531Zc5LbvH
      YnOOr2unyHdW2BM7wL2pBy+7178WSikaZo1yt0DCn1r31GqzbKsxgGkbvLnwRw4M3ckt8duu
      uHypU+Dd5TeYiu7h3tSDVI0yH6y8zTNTz132fPRS/pZ/H4/m2bRTIaUUlurhusSnmN9e7vWF
      P/CDkYc2fA4svrFtAnC1nf8CS1kcLRxhtbWMQnF/+hFGQxN91WDZPV6e/S2Pj//0upwKKaVo
      9ZrkWoustBcpd4u0TJ2Ef5gfTzx7ySPPV9UvWdRneWL8afn6xlXaFgHot/N/W661xEprgXtS
      P7ymWgrtHEdy/8PTU8/jucJA8wJb2VjKwrJ7+Nz+dffmnV6bj/PvUerkmYjsZCy0g1QgQ9AT
      4mjhCE1T59HRp9Z08AV9hk8KH/D05HP43P5r2jYnuuEDMIjOP2gnK8c5VTnOVGQPB4buJOqN
      X+yYlt2jZlRYbM6R7+Ro9XQ6vTYelwcNDUtZ3J64mz2xW/G5fVh2jzO1E3xROsqhkcPsiR1Y
      ExClFO+t/IWIN8qh1OGLbRXaOd5deZOfTf4rIc/2/MrGVruhA3Ajdv4LDKvLbGOaU9XjuDUP
      2eA4xU4evVcn5h1iIrKTTHCUkCdC0B262GmbZoPT1S+YaXxNKpCh3CkwFp7kUOowPrfvku1Z
      tsVbiy+zM3oLtybuom7UeHPhJZ6ceJaEf3izNvumc8MGwLQN3ph/iT3x/dyeuGeg6x60mlFh
      tbVMOjhK3JfY0Hm4pSwW9VmG/MPEfUMbasewDP48/3tuT97NF6VPeTj7xGU/yBJXdkMGwLRN
      3lx4iV3RfdyRvLE7/2Zr9Zq8Nvci96cfYWd071aXs+3dcAEwbZO/LPyRychu7hr+wUDWKcSl
      3DATYpRS5DsrfLz6Hrtj+7gzeWirSxIOsOUBUEpRN6t8mHuHnurxUPYJUoH0VpclHGJLA9Cz
      e3y4+g6VbpH7Rh5hLLxjK8sRDrTFRwDFVGQPD2d/fE3T9ITo1w03CBZiM8luVziaBEA4mgRA
      OFrfAagUcswvrQ6yFiE2Xf+PSc3ncQVi2LYtj0kV21bfAUilUhQbXXlMqtjW5DKocDQZBAtH
      kwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MA
      CEfrOwBGt0NDbw6yFiE2Xd/TuBZmz+OPpYiEQyilsG17kHUJsSn6PgJEolFyuW8mxQ9gUpkQ
      W2LdI8Dpzz/gzJk2P3nuSQKXeOFQIkkoPoymaRfnBQux3awbgNhQGn9shcs9JdYfDCOPZBPb
      3bq77VKxgluZyI1OxM1uTQCU6uLSfLj9AblGKm56a/q4pvnxuBW79uyWAIib3po+3qkX+erc
      eRptYyvqEWJTrQlAcX6RQDLC6eOnkSv74mZ3yTvD9boGLr9vQ6dBcmc4sV2t27/rtRq1chlz
      s6sRYpOtG4DC0jne+t+/yyBY3PTW7eOtdoNmoS6fA4ib3ppPgntGB294hMx4Y6sfISnEdbfm
      CNAs5zlx8jS25kG+4iZuduvu5Hs9C7A2uRQhNt+ay6A9o0OpUkPT3KTSKbkMKm5qa44AHl+A
      TOZSX4IW4uYiVzqFo/UdgG6zxmdfnhpkLUJsuj6vdCrOnTuP3jTkMaliW7ump0Tquk4kEpFB
      sNi2rmkMEIlEBlWHEFtCBsHC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC
      0SQAwtEkAMLRJADC0SQAwtEkAMLR+g5ApZhjfik3yFqE2HR93/zN5/NTy+exR9MyJVJsW30H
      oNlsopS6+IRIj0dupCi2n2uaE3yBzAkW25UMgoWjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISj
      SQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISj9R2AUn6Fz0+cHmQtQmy6vucx
      utxuduyYkMekim2t7wCYhoGuGyTjUZkTLLYtmRMsHE0GwcLRJADC0SQAwtEkAMLRJADC0SQA
      wtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtH6DkC9WqJS0wdZixCbru9p
      XOFInEKphB0NyZRIsW31HYBqKc9Kvko2k5EpkWLbkimRwtFkECwcTQIgHE0CIBxNAiAcTQIg
      HE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcre8AdFsNStXGIGsRYtP1HYCVfIla
      uTDIWoTYdP3PYrEMWsYAKxFiC/Q9IUYphVLgcmkyIUZsWx74pjPrev8T3FutFrZt43L9/xnV
      9/+/3s8uZE/TtEsuM6j1XMu6lVJX/bpBtn+lbbuW7dc07bqt+0Za5lLvo+fCxl3rHjwcDq8p
      4npZb4Ovl/U6wPUk27a5bQ1sJvtmbdhmt7VZneMC2bbNbWtgAZg5d4ZGo8PU3t3UyxXKjRZT
      2SR4QyzOnWPvvgOUShVSyRgdw8ZoVVkp1nErk0B0iHazyVQ2yVxB58C+vTSLi6zoMDrkp+fy
      41Em7Z6i024ynk5x5uxZNE8Is2swNprE1PwYjSJ6z8OdB/ZuqOaVxVnK1QbpsR10mjqVcomp
      qUlM5aa4PMv4rltoVMokh4dpd7q4lcH0zDLhiBcLHyHaxEf3sPj1CYYm9rMjHd9Qu4XlWeq9
      AIkgaP4IyuxiAc2mTnY4wVdnzxEIhegaFpmYHy2eYnn6a+Ijo+yeGt9QG4tz56jWdMamdtGs
      1yhVquzaMYbl8pObm2bnvluplEqkUknaHQNltphdKhL0KVy+CHa3STY9wvTMLFP772Yk5t9Q
      uyePfcLkbXdRWV0llcnQ7bRBz1ELTBGxyiwVGnhVB380QbvRJD0cIZcvMXXrQeL+K3daq13l
      y+klotEYYZ9GpVojPTpBq9lEszq4g3GCbgtXIIrRapJIRDh75iym7cEyuozvnKDdNtHLebyR
      BO4XXnjhhQ1t2WUYhkGz1SYZ9rFQarJzPIvCpl5vojdqRCNBTn15gla3R7trkMmk6bZbDI+M
      YCkNl1JEYxGsbptyrYI/nCS3PEe10cTv96M3qjSbJigT0IhHg5gE8Hsh7PcylE5j9noEvS5G
      Rnfg82ws/ZVymezIMNMz80xM7cKFTb3WoN1uEg6HyC1Ms5qv0263SaTT0DOJJJLYloXHpTGS
      jKEFk7iwGR8d2fAe9fy5aRrNNn6/n0a9QKulYdtdQCMSCuLyRXBriqDXw3AqiWkr9LqOLxAk
      ORTbUBvlSpWRRISZpSJTU5OgLOr1Bq1Wk0g4yPkzp6jU27Q6XVLpNL1uh6HhFJZl4QISQzHQ
      XLRaOsHYMJGg94ptql6bc7PzGN0mHl+EmfOzjIxkqRUWIJzBj0FyJI1tW2gKYvEIyeQwqwuz
      REZ2EPJd+X3rtarYoRF6zRyGHSIQ8KI6Om5lsNrx4jJ1lhYWsLDpdmyGh8I0DQgHPcRDPoLD
      o9hGh0jIT6FcH9xtUXxuKNY7pGJ+Kk0T2zQIeDXcgRi1Uo7M6DjLy6tkxzIE/X5WlxdoW26i
      ARf+SIzc/ALJ7BjNWpXxHRMY3S4uBYvL8wylRgkH/ChlodBwK5OZ+RXGxkbRW108qkujqxhL
      pwgEAxuu2+p1WVwuMj6aYiVfJuDV8Hq9GLYbu10nkkxTLuRIpjKEw0FqpTzFapP0cBzL5aNR
      XMUbHSIRCV9Fu4pOp4umYGFhhpGxSQJeH0r1UGjQ6zC/VGBsPEOrY6G6DbrKi18ziSSzRIK+
      DbVidlvkijWyqTj5so5bswj4PFiuIJ16gWRmjNXlFdLZLMFggHJ+hWrLZDgWxOUPU1xeJJJI
      0dIbTExO4nFdOdyW0cV2e7FaJc7M1di3dwcBv49uq47yRmiUVmiaGvGgG38kzvLCPPFEkq5h
      MTGW2dAORClFbmmBofQY1fwy4Vgc01LoDZ3heIiGAX4MlDdINBTCTY/pmXmyY+PoDZ2QFwqN
      LkNBN+FEWu4LJJxNvgskHE0CIBxNbugpttzHR/6KN7qDYx9+wC9+8S9YnijN0gIuZXKm6KJX
      Psf9Dz9JxGPSaJu8+PuX+fd/e5Lfvn2aA3smiHldWK0qWno3vm6d3fsP4NngFV4JgNhyyhOl
      uXSa5I69nD5zHkvZuN0Kl75MaPxRlF3nzOkvodfDUhZ333sXHmDv/lupz3/GXKWKNzzKwXSN
      94+dIjA8zuTIxsakMggWW65Wr9Eze3jcHsxOA8sbJeABsCmVagwPJwDwahZNy4fPZRMLeTl2
      4mvuvOMAs9PTZMYnqNZ02vUSk7fcSsi3sX27BEA42v8B3OunK+hFYLcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='National_MRA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5Rcx5Xn+Xsmvc+sqixvUSig4AEaEARBT4oURUqUt93q7pXanW31zHT3
      ntme2bNnzuw5M6d3R2faTKut1OyWJ0WJokhKJEEQIuEJD1QVytssmz7z5XOxHwosEgRAFC1A
      1vt9ASrzvYiXmfGPuHHj3ghJCCFwcFihyG/3RiEEjnYcPui8bQEA2Lb9bj2Hg8NV4R0JwMHh
      g44jAIcVjSMAhxWNIwCHFY0jAIcVjSMAhxXNsgQghGDg1FGmUylO9g5gvddP5eDwPqEu5yIt
      O8PQ6BT1vjiSXqJiCDyyjW3bzmKYwwcaabmhEJV8hqIFs9NzrFq9ChmBbdsoivJeP6ODw3vG
      sgXwRoRwBODwwceZBDusaBwBOKxoHAE4rGgcATisaBwBOKxoHAE4rGgcATisaBwBOKxoHAE4
      rGgcATisaBwBOKxoHAE4rGgcATisaBwBOKxoli0A27IQQmCa5nv5PA4O7yvLyggTQnDq4K/x
      1Lejpxfo2LARn/zaew4OH1SWmRI5S65s4soWaIgEMG2wsZ2tER0+8Cw7I8zSK9iKwsJ8hmRN
      lZMR5vChwEmJdFjROF4ghxWNIwCHFY0jAIcVjSMAhxWNIwCHFY0jAIcVjSMAhxWNIwCHFY0j
      AIcVjSMAhxWNIwCHFY0jAIcVjSMAhxWNIwCHFc3yDsmzDAb6BygXC/T2OYfkOXx4WFZGGEhg
      awz3DyPCEaTzuQDOIXkOH3SWJQDLrKAbFmowRGl+mlJTEwFlcfBwEmIcPsg4GWEOKxpnEuyw
      onEE4LCicQTgsKJxBOCwonEE4LCicQTgsKJxBOCwonEE4LCicQTgsKJxBOCwonEE4LCicQTg
      sKJxBOCwonEE4LCicQTgsKJZXkqkqdHbc5ZUappTZ/uwnSQwhw8Jy8oIkxQPbtlici5LV42P
      tC6Iqk5KpMMHn2UJwNRL6EKlKuxlcLZId7WEjJMS6fDBx0mJdFjROJNghxWNIwCHFY0jAIcV
      jSMAhxWNIwCHFY0jAIcVjSMAhxWNIwCHFY0jAIcVjSMAhxWNIwCHFY0jAIcVjSMAhxWNIwCH
      FY0jAIcVzbISYoRZoa9/iEgoyHyhwpquDkc5Dh8KlndKpOImEg5imzbC0jEtgYqTEunwweeS
      AjAqGpopCAZ8SIBdyTE1l6WuJoFCESQJWXJSIh0++FwyJfKVA7/kyKF5vvSHn8d3mRudlEiH
      DwOXHAGSdZ1ctz253FO0HRw+sFxyLqtrJdL5PNL7/TQODu8zFwlAiArphSIuVcWZ3jp82LnE
      CODGNvLYiuv9fxoHh/eZiwQw3XeKDIJwxJkDOHz4uUgAwaokIU8ILTeNdTWeyMHhfcTZGc5h
      RZFfmGXs7HG6b74LWO5KsIPDBxghBL0HXmBy4Czx2kZ69r/A6htuRXW5nJAehw8+Qgh0rfy6
      v21OvPALUkN9i3/bNgNH9+EPRTl3+Nd0bruZyXOnACca1OEaZejkYUxdX9a1hcw8z//rXy/9
      PXjsAMXMPEeefhTT0NG1Et5gmPW7PsK6nXfTvG4L0+fF4QjA4ZqjUirw6x/9I1MDZ694rRCC
      k3ueQgIq5SJCCEbPHGPDbR+lac1GxntPUMpl8IejBKNxum++m2A0QSGzADgCcLgG6X9lH6uv
      38Xo2WNLr5mGztjZ45h65YJrbcsiOzNF3apuUoO9CGFTzKUJRuPUrepmqv8sxWyaQDi2dI/b
      F6BSKmDbtiMAh2uLUi7D8MnDbL33YdKpccqFHAC9B/bQd3gvB574HrAoCNu2mR7uo6qxlfrO
      dUz0nSKdGidWUw9AvK6J9PQE5XwWXzi6VIckywghmOo/4wjA4dri7MvPsfH2+3G5PVx//2fY
      871vYZkGw6cOc+vnvkZmZhKAI08/St/BPYz3nqS5ewuJ+mbSqQl69r9A26YbAJAVBV8wzNz4
      EIFIfKkOSVqMchvrObHMQ/KEIJtOY1kW2Vz+3f7MDg5LLEyNUdvWBUCytRN/OEbP/hdItq5G
      UV24fQF0rczM6AC9B19kbnyI6uYOJEmiqXsT2dkUdR1rgMWGXtvWxdCJQ/hC4aU6JEnCF4ow
      2X9mmesAlk4mu8DQ6ARBj4LiX4NfFkuLYQ4fLizTQJIkZOX9XyaqaCVk1bXUrhq6NnDoye9z
      6+d/FyEEsdoGhk8eJhirIhCN07h6AwC2bbN2+520b9qOEIuuUID61evZ/8T38AbDF7RVXzCM
      oqrLzAm2DdK5CrFIAL1cvvINDh9gBC89+m3KhRy3fu5reAOh97AqgS1sZHkxmkArFvAFw0sm
      CkBd+xpsy6KmuQOA+lXr2Pf4I9zw0c/S0LUeXhe0r7hc+F3RC6oIxqpo7t6Mxxe44HV/OEpV
      Q+vyQiGEZZLO5ggEg+i6QSgYcEIhPqRMnDvN6JljNHdvpu/QXm773NeQ5MtbysVsGo/Pj+r2
      LL0mhMCoaLi9F+cTCiF46bHvsP3BL/DcI3+FbVnc8cXfx7Ythk8eppzPsvWeT1xwTyE9TyAa
      R5IkhBBYpoHqci/7M9m2jfyGzzAzOoBeLi33nGCVeHxxEuFxL79ih/eHzMwU3mAIrz+49Nrc
      +DDHnn+CaHUdq2/YhcvtwReKXLGs8Z7jtG+6gWRrJ4NH95OZnSKWbCCfnuPwUz/i1s9+Dfl1
      nd7Lj30HfyTGjk98ZamBnnrxafoO7+Xe3/r3BGMJYLHhH3zyB8RrGzl3eC8t3Vvw+gN0XncL
      zz3yl9iWRSASZ+2OOy96plfLgEX7/a00fuCixg8sjShOLNA1yuDxg6guF83dW970uqnBHl7+
      yb+w5sbbWbfzboQQDLzyMoPHD3DTQ18iNdzHvscfwbYs7v7qN67YeBZS42y955MAVDW2kk6N
      4wuGeenRb2ObJrNjg8yM9BOMV5Fs6QRJQtgWvQdeoOvG2xg8tp/09AS3fPq3OfSLH3DbF34P
      SZIYPnmISqnAwSd/QMu6rQydPESkpp76Vd3E65tBiPfW3LoMjhv0GkIIwcLkKCf3PMWJ3T9n
      vPfkRe/PjQ9jWyYAulbm2LM/Zecnv8rs2AAAo2eOMtl/hju+/IeEEjV0btvJvb/972lZv41z
      R15aKssyDXb/299QyMwvvaYVC7jcXtTzo3woUUN+fpaXHv02G269j013PMDuf/sbkCRO7/0l
      Pft3s2rrDm566MuM950iN5ei79BednziK9Q0d2DbNrm5aSzT4PRLz7L9wS/ywB/8OWt33MnI
      qSMk6lsA8PqDV6XxgyOAawbT0Pn1j/+Zo8/9jFC8mls/9zWK2TTidXsvlQs59nz/73jukb9i
      9OwxXv7Jv9B98z1UN3dQymXIL8xy5qVnufHBL17U03ds2c7IycNLnpD+V15GVlSOPP3oUvkL
      U6Mk6luWJqGheDWZmUlMQ6d+VTfJttVsvfdh1t9yD4mGFib7z9C8bguKy0Xr+m2c3bebaLJ+
      qe51O+/h1N5n6D24h9Z1W3F7fUSqksSSjZh6hVhtw/v19V4WRwDXCOcO7SVaU8cdX/oDWjdc
      R6y2EdPQOfjkDxg5/QqlXIbUQA+rr7+F6+77NOmpMTq23ERz92ZkWcYXDLP3h//I1ns+gcfn
      v6h8jy+ALxQhO5tCCMHwycPc9PEvUykXqZSLwOJcIlJTt3SPPxJjaqCHSFXtku29+rpbkCSZ
      Tbc/wK7P/A7KeVdpsm015w7/esmHD1DbthqtmGfoxKELbHtvIEjdqu4LwhOuFs4c4BpAK+YZ
      PnWEu37jjy5wAXr9QcZ7TzI7NoiuldHLJe7+zT8ilmwglryw9+y87hZUl5tka+dl62lZt5Wx
      nmPIioLb58ft9VHV0MrCxAj1nevIz8+QbFm1dL3L7UFRXVQ1tV1Ulj98obsxFKsiGEtcVP9N
      D30RQ6+gqBfmmN/z1W+8qXfp/cIRwFVGCMGRZx5j3c67cXk8F7wXqakjXtcECOo61lLKZy9r
      NjR2bbhiXdXNHfQd3ovb46OxayOwuNo6MzKwKICFGYLxqgvuidU1UtXQuqzPct/X/hTP6zxR
      AP7L9PJXY5HtUlwbT7GCGT55GEmWaVq7+aL3Nuz6CJIsv2W33+UIRGKYuk7/kZe46ze/AUC8
      vpmjz/6UxjUbMCqVC/z5ALd+9ndQ3d5llX+1JrLvBEcAV5FyIUfPgRe488t/cIHp8youz/Ia
      3luhpXsL/kgMb2Cxp/YFw1x/36c5+OQPkWRpaVX2tWe43OaYHw6cpPiryKFf/JCallW0rNv6
      vtX56s/9RsHNT44yOzrAmu23v2/P8n4ihCBdNon7L5yLXP1ZyArFMg1mxwaXgrneLyRJuuRo
      k6hvZs3229FNm8NjeVL55aUjflCYL5k83ZMmWzYpGxZ9s2VKuuUI4P3EtiyMioZtWUwP9xOr
      bURxXVs78A3Ma7hVmWMTBcrGB2dnKFsIKublI5OHFzQ2NwTYP5pjd38Ww7I5Ml5w5gDvNUZF
      wzR0xntOkJmZZHq4H18oTKVU4Pr7P3u1H+8i5ksGm+oD1ARcvDiY5Za2CH73+2PmjmU0Fkom
      MwWDNTV+mqKeK990ntF0hYH5Mnd2Xuh1EkIwML9Y7rbGKK1xL6YlCHkUnuvPOAJ4L6mUCvzs
      r/4LHl+A2rbVCCHYdPtHMY0KrRuuv6QpcrUp6TZ+l0LIo1IyfAynNbqTgSvf+A4RQnB2ukx7
      wsumejevjBeoCbrwqFc2UoQQzBYNNFNQ0i1sAUGPQqFiIUkwMF/mjlVRJEnC71Lg/KC7qS7o
      COC9ZG5ihJbuLXRtv41IVe3VfpwrUjFtVEVCPq/LhoiHl4ZyrK0RlxTr5SbUl2NgrkzvbJmd
      bWE002Y0XWFbYxBJkpgtGoS9Ch0JL5Ik0Vnto3+uzLraK4vPsAWKBPVhN8/0pvGoMrevivDi
      YBbTFnQn/biUi4VUHXQtNyHGZDI1R03UT//YLKudQ/KWRWqgh8aujR+Ixg+QKZtEvcpSg/ao
      MpIEmmnjVWWymkXk/PumJXhxKEtrzEN74squ0qJuMTD/qh2eX2w/EhR1G59L5thEkZtaX0uG
      aYl6eap3gZmCQXPMQ3vcS8mwmcrpFCoWsizRGHET97sYXtAIeVWqAy4CbpmQR+HXQzk8qkRQ
      UWh8E1NqeSOAJCNsi3w6g63IYC9m8jiH5F0eIQTzU2Os3Xk3pmle+XpgPGcQ8ciEPVfHtTxX
      1Il45Quetynion+2TMAtc2i8wN2dEXwumUPjRaIemfFMhebIaxN5yxYo8sUjwivjBdYlvdT4
      FaIema5qH9MFg5F0GZ8qUx1Q8Cnigrp3tQZRZImXRgqYlk3vbJm4T8WrSuRKFhXDYlTRSOUN
      drWFcCsQjC0uGnoUiaaIm6aoG7AxLzNBXmZOsMHU1CSNjY2IwgIVW8KnOIfkvRkzowP4Q2H8
      wfCVLwZymknfbBkh4O7VsUs2IlgUlmba+FzL/95NS2DaAq/rzcftrGZTn/Sjqq81i9a4wi96
      Fgi4ZW7riPLScB6/W6Yl5qUj4eVXfRkOjpfQTBvLXny2e1bHLrDdxzMVZFmiPrJo3tzQspiY
      43GrvNCfwa3KXNcYvKBegMj5v1dX+9k3kuOhdQn8LhlJkrCF4InT8wTcCvd0xZDfYIbtbI8g
      cWXzbHkZYaqH66+/HoC6usVoQafjvxjLMEhPjxNNNnL25WdZd8u9y753rmjQGvNS0C2mcvpl
      h+3pgsHewSz3r40TWKZ35mSqSMmw2NGyKMbLNYqSbhF6w+ijKhK3tEUIemRcisxH1sRR5dfK
      CHkVVFliW2MYVZYYXNA4PllEkiAZchF0K5ydKXFre+Sier2qTFvcy+CCdlG9r6c56gERvuDz
      SkBN0E1TzHNR4wcu+dqlcFaC3wZCCLRiHt/revdiNs3eH/4DvlCESqmA2+vn1s9/fdkTxP0j
      OVZX+/CoMnuHsgRcCmtq/FQHXzMvhBDsHsjSHPUwktZYXxsg6lORpcUf/NVRw7BsdvdnUWWJ
      mpCLyayOaQtqgi4iXpXOah+aYeNWJTTDxu9WMG3B7v4Md3VG35J3SrdslNfVbdqCl4ayrKnx
      cypVRDNsbu2IErxMAxdCYFgC9zK8PW/EtgXyZUbK5eJ4gd4GmZlJnv77v2Dr3Q+ha2W6bryV
      fY8/wtZ7H6a6qZ3jz/+c1g3blt2QhBAUz/e+LkXm7s4Yc0WDvtkS1cHX8ngzZRO3ItGR8BLx
      qoxmNI5OFBCAIknsaA0T9CgMpys0Rt20x33MFHRaW8OcShWZLhjMFQ3a4l6eH8jgkiXSZZMH
      uxMMLWjE/epbds263+BdUWWJWzsWQ6WDHoWSbl+28cPiSOJW314jfqeNH5wR4C1jGjr7f/pv
      1K/qZmZ0gGAswejpo3RsvYmuG259W2WOpjWmCwbXN70WTWnbgl+dS3NX5+J8wLBsXpko0BTx
      UB95zTyybIFgURwnp4psbwnx4mCW2zqiF9jhCyUDyxbMFAxKho1u2axK+JgrGsyXTASCna2R
      y849Pqw4AngL6FqZPd/7FsnWTtbfet/SbgNCXNpPvqwyLZvnz2W4fVX0okWfl4dzrEv6casS
      Lw7mSIZcbKgNXLaR9syU6J8rs7khSGPk0nMI0xL8/Ow81zWGaIx6KFQsnjy7wP1rY4Q8K88g
      cARwBYrZNIee/AG17V1kZiapbu6gY/P2d638npkSAGtqLk5jnC8aHBrLgwSb64PUhq6cF2DZ
      All6c+9H2bDwqPLSRFEzbDzqpYPkPgy82VzhmlrPEkKQnp64amsLxWyamdEBbHsxCGxhaowX
      vvu3dN14K6NnjyFJMu3nN159O1RMm5L+WoDZbEFnPFthVdWlF5ISARe3tEfY1RZZVuMHUOQr
      N2SfS7nAS+I971r8MFIo6/zZt57l73/+Cpm8dtH719QIMDs2yDP/8P/ywO//n0ST9e9aubZt
      o5dLS0kgl8LQKzzzD39BVWMb+fkZ6latZfLcabY/+EXCVcnF/TJl5ZKbLC2Hkm6xZzBLwK2w
      qz2CZQue68+woyX8ppPEd0KhrDM0lWZDe/JNr6voJh73ovljmBa2LVBkGVmWLug5Nd2kYphE
      Au9+os67RbGsM5spMbVQ4FeHBkjny3zqtnV43QpP7j9H0Oemu6WaZDzAls66a0cAcxPDHPz5
      D2jbcB2lfJZt9z78rpRrGjp7vvctitkFbvzYF6hqbKWQWSBSdWGjSA31Mt5zguvu+zQLU2NM
      njvNmu23X5Qi+FaxhaBs2OwfydGdDHBiqsAdq6KMpiuUTZv1y4h1eTuYls1f/+QQw1MZ/uIP
      7kZ5g3DnsyViIR/ZosZ//Lvn+U+/sYtz4/M8e2SIsN+DaVmoisLOjc201UURQvDXPzlExbD4
      k8/twKXKHD2XYvOqWuLhd5Y1Zlo2mYLGkd4pDpwZp7Uuyhfu2oB6ifidSyGEYGgqw89e6iVX
      qlAXD1IdDXDzhiYqhkVDVWhp17qJuTwDE2n6JxYYnExfHQHYlsnQiUN0bLkJgJmRfg499WOS
      t3+B1Y3V7H3km9z+hd+jkJ6jurkduPSwLoRAL5fw+C9uRELYTPSdZmakH9XtoXPbzez+7t/S
      sHo9Q8cPEErU0Lbheto33wjAgZ9/n7YN11PT0vGWP8/lyJRNDozmcCkya2v81IXdHBnP0xD2
      cGKqyK0dkWVFO75VXm2sjdVhekbn+K37t1ATC1zw/p/97bOsbammvirI/jMTjKQyPLBjNVs7
      63julUFCfg/rWqs5N7HA4ESawak0/+4zNyGAbz91DNsWXLemnuP9Kf78K7uWGutspshPf92L
      ZQt2bWqmJRnF770w5yG1UMDvdRH2exidyfLPTx7F53HRWhvlYzev5tnDg8xlS2zrqqe+KkRJ
      M2iqCS81YrhwjjM+k+MHu0/xyV3dNCcjy3KPCiHQdPPqCEAIm+cf+RsautZT07KKV555FM+2
      B5EDcYq6TSzTy9hLP8fl8eIPRfCFouz4xJeX7k+nJtj/s38lmmxgrOcEuz7zOyRbOykXcni8
      fqZH+jnz0q/wh2O4fT423vZR3F4fvQf3cHLPUzz4h/8Z09A58vSj6JUyW+7+OIee/AF3/cYf
      oajvjifEFoLn+zPc2BQi5H2tzKxmsmcgSzLk4sbm8PnvQ5ArVogE3x3TYnAyzZP7+vjDh2/g
      yf3n8Lld3Lntta1NJmZz/HD3GWrjAX55aJD//nt34VIVoufrt20B0murqUIIKoaFx7UYCFcx
      TAzTJuhz8/SBfnrH5mmoCtE3Po+wBQ/tXIPPq/LSyTF6R+fpbq3CsgX1iRDVMT//+suTRAKe
      pbihr963mfrzvfSr9f3ohTNUDIup+TymabO+vYaPbu/ksb09HDo7QVt9jIXc4k7lhbLOH3zi
      ehqrlxd28nqumgmUmZvh6Mt7mB88g3D7id71O9zVGSWnWRyfKhDzSHRGFWZGztFz4AV2fPwr
      +EJhDE3juUf+ku0PfYmFyVGSbat56dFvE002UEjPnV+F9bHj4d8gEIlf0FPYtkUxs0AoXr34
      GWyb2bFBdn/3f7H5jo/RdeNty/7sJd3G45JRL9PbLJQM+mbLbG+5+EdJlww8qozfrSCE4ImX
      +3hy3zm+8ekbWdtSfdH1M5kisaAXl7r4XZcrBkXNoCpysedI002+8/RxdqxvZEN7kpl0kW/+
      aD9ul8LDu9aysSPJT148SyLi55aNzYzN5miqDr/tSbAQgpODM+iGRWdTgpDffcEEO1esMJTK
      4HEpjE1nOT4wzefvWk99InSBqN4My7b50e4znBiYpr0+xpfv3cjkXJ5IwIvHraAqMh7X2+u4
      rooALFvw4mAWjyqjn34eyx9n0w03URVYHCptIdg7mKWr2k9NyMWBffsZPfArQn730q5k9Z3d
      S+UV0vOM956k64ZdmIa+uIvZedvdtASStOhubE94LxlENjc+RKSmgZ55g84qH4rMJePHl+qr
      WOwZyOBSZar8Ks0x7wXPPpnVGUprdCZ81Ibf3HtzemiGX+w/x1fu3cQ/PXWMWNDL1z62jYph
      MjVfIBHx8X/90wt0NiaIh30MTabRTQtZWpygXr+mnruv70CWJBZyZb75o/10NVfx2TvWLZkl
      pmUzNpPl8V/38r9/8gb+73/ew5998WYC3g/WTt+2vfhbvpseq6tkAr0W0Xi5pIqSbnFgNI9u
      2cR9KjnNIK6atMS8TGgq7QnvFYPBNMPmmd40Ea+CS5Uo6fZlY13miwYHRvMIFgOtbm4LE/Fe
      ulc5Plkg6lNpjHiYLRqcnCqyrTFI3O/ilfECli0IeZXzYrr8jyWE4L8+spf/7YGtJONBhBD8
      45NHqUuEONI3SSLs48zwHPfduArdXJzMrW+rwed1gYBSxeCxF8+iGxY1sQAHz07wpbs3sqal
      6pJ1/fk/7ObBnV2cHZ7lN++7eB+ilcg14wW6EiXdYjKnc3a6RMCj4JIlEgEXa2p8S0NuSbfI
      VSxMW3AmVaJi2axPBshWTNbXBtg/kmNtjZ+xbIVUTifud7Gu1o/fJXNorEBzzEN1wEWuYvHK
      eH4pjS5dMvC6ZDyqjBDw7Lk0d3bGlsyffMXkwEie7S1h9o3kuLMzuqxoxOl0ge88dZw/+fyO
      JVGWKgZP7e+noz7GplVJNN3E7VIu8uK8ii0Ezx4epGJY3H1dO1735U2Bv3viCGdH5vhPX9l1
      Wc+NbVmMHx8mP5OheWsH7oAXt9/zoVgnMG2TgpEj6nndgXlXWwD5UgWPS8W9zPh28/xK56lU
      kXTZJOpVmc4bnM/TIRFwoUjQkfDhUSXU1y0MTWYr7BvJsbraz9qkn9mCzvGpIjGvimELdrSG
      lxrugdEclr3owqyYgohXIV+xCHtV/C6ZzQ0XrimcmCoyltHYWBdcVjK3EILHXuwhGQuwc2Pz
      W/zW3h6ZgoZtizd1W/b/+jSGZlCzqp6e546h5ct037uVurVNi5GbmoHb98EynYQQjBeHOZDa
      TaE8y42NH6E11MmsllruEUk6/UMT1FWFGByfZd26tci8fQGYls23fnaEXFFjPlemORlhQ1sN
      B85OcMfWNlY3JZY8Em+GZtjsHlhcTPK7ZRRZetOeVwhBvrIYdfmqKAoVi5JhUeV3XeA+K+oW
      E9kKzTEvqiTxfH+GmF9ltmCwqz1y0eKVEALLBkVeno3685f7GJxK87sPXodLlSmlC/hjQSzD
      JJdK448FUd0ukCTUN+nV301s22bfPz/LDV+8DZfXjW3ZGJrOgX95nnBdDL1UoZwp0rGzm0Rz
      DTP9i0eW1q9rwXWNisK0DU6kXmQgc4b44CHctmA2UQv1m/Aq3uWPAKmpKUzLIuYWaJFGoupi
      SuTbGRqFgKmFPPr5fWf2nhhDVWTu2tbGUwcHmJjNs7opzoM7VjM1n0c3LYplA1WRCQc8qLMZ
      qlfVoXpcSzb7RXXYNsce3UeoNko5XSTeWkN1Rx3ugIdSxaBcMUm8hQUczbRxnRfY27EG5nNl
      imWdSNDL+GyOn+zt5f/4wg5URaacLfLS3z1DTWc9pXSBaGMVmfF5hLCRFJmmLe2UsyUyY3Ns
      eOhGPO/RSuxM3yRzQym6771wp7pKQcMoV5BVBbfPw8jhcxRmcwQSIVxeN9O94/iiARDQtmMN
      vogf5W16Zd4NNKtM0SwwVhjk7MwRPNkMd6z6OtFEHCFMjj77x6y+/hsEY6uWOQKYFU6e6SVZ
      U81cpsjarlVI72AEuKj8N0RT2rbgfz56gFLFYGI2j1tVUBUJRZGRheCm+QU23rsV1eOidm0T
      kiKTK1b49fMnaQi46d61jonD/Wj5Mm6/m2hDgvxMlvHjQ9zwhVt57MAA+06N8fk717OqMU51
      9L1Zjc0WNeazZV44NszodBavWyVf0qmvCnL7lja6WxddngMvn0VWZPyxIInWJKpbpbiQxzJM
      VI+b6Z4xPEEfpm6wMDpL7ZomJFnC0k3q17dcsm7LMMlOLRCpjTPw8lnKuRJr77m/Ju8AACAA
      SURBVNqM2+8hPT6HL+LHG/Kfv9YiP5Ph1C8Oc93nduENXbljsG0TXUujKB4q5TRa2o0Q0L/3
      NHqpwtZP7cQo68SaFifkr/6+laLG3GCKQDxEpP78wXe2vXR6e36+l4I2R1X1NiShoHpcV+xk
      jUqebClFb2UUgWAyN4g+O4U0rhEeTBJLtuL2RvGG/LTftIaZwVMMn/kr2rfdf/XnAJdjNlPk
      Ry+c4Sv3bkLTTQ6cmcDtkun0KJw51A+zGSaLOk11UcYrFnWxAFK2iNfrYiqnMZMv87HfuYf6
      mjDDqQyrGuJ8/4cvU53J80rZZOdNXYzkNQYn0/zpF27G53lttXImXWRyLo9AcLhnkt+6fwup
      hQKqIvPzfX08vGstiiyz7/Q4dYnFuUBVxE8i7MPjVukbm+eVvilOD8/SXBPh+rX1rG2Moygy
      QpJxqfKS6G3b5sAju9n6yR14gm/e8GzLZuTQOQxNx9QN8jNZEALpvLszmAgTqYuTTaXJjM+h
      uBRKmSJtN3bhCfkYeOkMq3Z20/fCKWRVRtiC5OoGZvonCddEad62imhD4oI6K6V53L44llkm
      P9/L0Il/IRjrIDN9DLcvgWVVsC2deO1WVHeQ+lX3kx7Lcuj7T+GPVBFOVmOZFs03uqiU8gy8
      kKZx01oyYxlizdVouSILo7Ns+OgNTJwcYvjUXkZvThFYqKVqspqIXEPjxlZab1h90XkCplFi
      9OyPOZTazYLUTHgoiHBr+LwNhKbyJJqbSa4LU995C5LsYuLEEJOnR4k1VpFNzZOeGLm2BCCE
      YG4gRay5CtXtWmokRlnHsixs0+bYYy+z6ePbmR1MMaGoyKZFSIIDPZN8+eEbsQyL3S/1UPB5
      ODU0gxBgmja1iSC18SB3tFWR6h2nOJ3hxq/cwcunx3nmYD9uVeGrt3czP5ji8Z4UZSQMy6K7
      pZpssUJqoYBuWHQ1J5iaL2DZNtd11VOqGMBibM3UfIHr1tRz7FyK+7avYtvqeiTbpufZYxRm
      swghcHlcJNprme2fwijreIJeAokw3fe8+WF4l8LUTSqFMpIsIcky6bE5tGyRSH0Cb9iH4i5T
      Ki1gKDZRfy3Yfo78cC9NWzpoWN+CqZuMHDpH83WrUNw2c+P70IopQGJh8hCWqYEkYVs6IPAF
      62nu/iyV8hzpYAQUlTXRDdiWwSu//Ab+SBPZ2dMgKQTCbcwO9uP33YBlp6ks1OHx1RFtn6di
      HEEr50hZ13PT2vsoFF/izP4s+bCO2AKbqneiSWVGsmdw5TJUjhbpjN1Dzao6Uj2TNG1L4PbV
      cOT4Txj29OEtt3NL0+2EqiVUJUmwKoRp5lFdART10g4JIQS2ZV9bAshOLXD88f0gSwQTYTY+
      eAPjx4eYOD6MpEjIqsKaOzcRrU9cdK8txEUTYNOykYB0QeObP9rPf/zSLUtxKcd/uh+Alus6
      CdfFOTs0w/5/eY7GdS34s3mqd6xjzhbcvL6J3UeHqUuE6GyMo8gSp4dmaamNEPJf+OVmCxoH
      eybZ2llLIuJHL1c48oO9NG3toGF9K0iL9vTcYIpgVZhwMsp03wTVHYvzmXeTsbOPMj38POeC
      LnI+H91jw2y76y/wBuoWRx5To5AZxOWJkJ4+yljPY1Q1bCcU70TYJtHkZlyeCLLippDuJxBp
      Wfy/kePI7D5mtCmEENxady+92VOsiaxf3FpdK/Czycf51Krfxs6Mcar/MbJuF91tDzBrZWkI
      NCOnejjBLDnJRB47umgGNW6lPbyadbEtuGT3+Z0fbE4tvEJv5iTVfR70oRKT9ccQ9aswJyv4
      O6Pc2/5xomoC9YO0EgygFcrM9k8x3TNOrLma9u1rOPjdF1h712b88RATJ4YY3NdDzap61t69
      eXH4ewergG9MijA0nYWRWfr2nGTTQ9sxyhVGT42w+aPXU0oXOP3UEVSPyrr7rntbk07bsjn+
      0/0kuxqoX3dpO/316OU05cIkkep1V7zWsiosTB5GL8/j8ddQ1bj9/Gc06T/9bwT9SQ6c/Q7G
      mjup8tWT8FYzNfYiLWWbtTf9CYae59izf0og2oqhZfFHmqhf9xlydplaXwOD+V4WtDmqfbU0
      BduQkenPnUUzy5zJHOf66p3U+5soWyV2Tz5FwlvNSH4A0zaQJJm10Q2MFAa5p/EhXpz6JXX+
      RgzbIOmr43T6GF7FC0jc3fggL079knlthk+0fQlZuvRaR17P8sz44wgh6IquZ11sM+PFERLe
      GoKud3Yox1WKBrU58K+7SXbWE6mPM7i/BwkJfzxI9z1bl8rX8mW8Id97ugiTHp+jf+9p8jMZ
      tjy8g1hT9VL980PT9O05ydZP7VwUwXkBmrqBXqxg2zalhQJIoGVL+ONBqtpqqRQ1jj++j6r2
      Otq2d13x+bOzp+k98E1Ud5BgfBWdW38X6XUHVdiWgVHJMnD076mUFzBlmLeLJGJduLPTePxV
      lJs20l8cpGyV0GZ7qG++jbuaHsIje7GEyY/6/4nWvoPceP+3OPvyf2PUp2BUtRJ1x9HMEguV
      ecLuKAUjS32gmXp/M2OFIeYrM3gUL341SNJXR52/iaj7tRirV5vPeHGYKm+Sc9kzrI9vZU6b
      4fnJJ/ErAT7W8tml6y3bYv/MC2yr2oFX9SGEQGAjS2/ejt7qNozLLeeqhUIIy0Y+H9xlWzaZ
      yXkitbGr4j6zLZup06PUrWtGfkMM0PzIDH0vnERYNt6In0hdnNTZMXyRAEgQqopgWRZun4dU
      z9jSF9u5az2JtuQVf7ByfpJDz/0H5E2foqv2JjJnfkph4RxNaz/FzOgedC1DrjhFwBOjZvUD
      nLNmmdSm6KzeRlbPoJlF/HNjzAUDfLT50wR81Qzn+2kOtqHKr5lV+6ZfYPrQ37Fr27/j7JH/
      Rap7Fx9pepiMnsavBvCrATyK9yKPXNkskdMzVPtqL9tDXw7dqiAQeJT3L4HGFoLhhTmqgyFM
      y2L/yBA3tbYT8ngZnJ9DVWReHOhjbbKODXUN19Yc4FoldXYMxa1iWzZ6UaNuXcslF6csw0TY
      Ytn2vG2bHH32P3AmHmZD6wP0Zk9xZ8MDFGbPoE0dZ0TVmXYLgr4aNGHglt1sStxAe3g1irQY
      R5UzMvRnz9IS6qDKe/nMr+nyJIeGf0bo+BNUGjeS6PoY26p3vO3v5Frl5eEB8hWNVC6HW1HY
      2tjMgdEhVlcnOToxhixJfHbzdQwvzNM3O+0I4L3GNIqorgvXGYQQjPc+Tn6hl4FcH5FNn2NX
      3T2M5AfYM/UMIVcE3dZoC3WypWo7LtmNblVQZddb7oVfxbB1fjb8fe6rupPn5/dwS8N9RNxX
      /5zedxPLtvnuKwf5wtYblpwiiiwzkU3zq76zfGrjNrJamYbI4r5FQoirszGWLWx6Fo4ylD4N
      psbqMgRCDciym0jNBnzBxd2UF23fHB7/xV6fax2jkufsvv+GVpxGCIGi+ki23Ea8/jrmJw6Q
      Th3FitSRa1rPHVWLPXFzsJ0vdn4dGRlbWCjyaz+PW3lnqZku2Y0syUj+KMXZMiFX5Mo3vQvk
      KxqWbTOWSWNYJkGPl/ZEFYokM5pZIOEPEPQsml7ThTwvD/XjVlVubltFxOu7YlChEIJXxkeR
      JYmSodNZXYMiyyivez/olvjs5i2MLgzQXvXaOcaSJF2lfAC9wu5v/w/iDV0Uk4KSOsVqM0yW
      BYqTR2hZ8ynmxl6mVJikjMlt9/8jiuut550upkzOgySDsFE9YbIzJ1mYegVvoJrGro+/pfJs
      2yQzfYzU0HOYlTymWSZeu4Xm7s9QKc2Tnj5OKL6KYmaI4VP/StuG36Cm9XaEbaJrGWZG95BO
      HSUQacZqvZETmWPc2fAAcc/F4cvvBS9O/RK37KFkFrmj4f53XF5e07CFIOK7+LfRTZNnek9j
      2jYuRaEuFMHvdjNfKjKeSRP0eM4fXFeiMRJjMpehKhBka2MLtm2zZ7APy7aRkGiKxtjRtorZ
      Qp6Do0OUDJ22eBWNkRjHJ8eJeH14XS7SpSK3d67BFhaqrDJXmOVnpx5jppCipJdoS7Qzmh5h
      W9P1dNV088K5Z6/eJNhI5ymPTqOlczwb28e6wzFe2TiJIpvUHzyHfPvNaC4347lh2jUDf34e
      VS8jSQqRmvX4gnVEk5vxherRClOUC1NM9D1Bc/enmej92eKCjiShqD5k2YVlaRiVPPHarURq
      1jPW8yjNaz9NpGYDll5E19LYtoHHV4VWmiFavZ7s7Bnmpw4hbJNQvJOJvp8SindR23YXHn8V
      iupjrPcnzAw/jy/cSDjexULqCIFwMx1bv47bu9jL2sKmZBYIqCEEgoniCIdmf80DzZ95Rz27
      aVlM5bOoskJNMIQAnjh9nLDHS8TnI+bzE/H5mcimyVcqJMMenhz7IVvit9AaWsx99rncZMsl
      DMuibBgMLswRcLsJuj2sq60np2lktBLdyTrmi0UGF+aYzucAKBs6XtWFYVl4XS6SoTBD83Mo
      58MaNtY30p2su8gRkNXKpEtFmmMJinqFkYV51ibrLgj5frVZGpbFgdEhRtLzRH1+tjW2EPH6
      6J+bIZXP0p6opiNRjSRJ6GaFx0/+mP65PkzLQFVcPLzxs3TVrEEAsiRjWAbP9T1NKjfF7Z13
      XxtzgFRpgqfGHmNH8nZCapinh35Mt38DVkEjdkBjwD9GJl5GqY8i+VXWiShxyUd66jCl3Di6
      opArz1DV9TEqc310r/0C8ap1mLnTCGMWM3sMYRv4Wr+O4lk0pyqlecZ6HyM314PLHcTjTyAE
      lLIjqJ4wxcwgifobiNZuQZZd5Bf6qG66hUDk4tBl27aQZYW8nkWWZNyKl6nSGHk9S9AVIqMv
      cHTuIAHXYthEyBXh5to7CbleywkulWbweyPMlg0msmm8qouw10d9OMKJqXFmCnlaY1X43S5U
      WVnMOT7XQ0MkSsU0WSgV8blc1EeiJINhNNNgtlCgoGvUhiKoskwqn6UtUcVULodpW6iyQknX
      CXu9uBUVj6rSnqgir2kU9Aq7+3uJ+wO0xBIcnRilLhxhTU0tydBi2LgqK6iyjC0E+YrGeCZN
      R1UNIMhrGtXB0LviwrZsm8lchsZI7LLlDc0P8Mjhf+KG2hu5qXknuGXcipu5qRT5bIaGllYs
      y0JRFNweLy6XC1tcQyvBlm0u+YJfb/8KWyBMk9zJIbInB8iV0pzYmebW9gdIiBj7cnvJ6Rl8
      lRR+Yw4zvpNpLUXMHWODNkxVYgdFbyMBI012+knG5DBZ2UfMHWFdqBNXZMP5ekwqqSewSoN4
      6j6B7GtGllWmy5MYlk5doImz6eN4FB8d4a6lyeirfmyQ+Onwd9HtCoqkkvTVE/MkyOoZMvo8
      dzc8iC3sJZfg63/IqfkB1Mnv0GetISWvoSNRTUGvMJZewKUohL0+NtQ10D83g2XblAwdzTC4
      zltD1B8g3BijUNEo6jrVwdCytwa/EmVDx6WoqLKMZdvnI2Hf/8QY0zYXvV6Ipe89U07zrZf/
      krAnws7GXfQMnmRj61ay47MAS/s3JWqSxKtrmBwdweV2I2wbTStjmeaiy/dqCeBVf22hUiHi
      8zE0P0dndZLaUPiy2U+GZSHbguGj/x/9/hJTusoGVdCh64CMt24bwlzAVnxM586yX63B5wqD
      JGFYOgo2q2NbCClejs3tJ1HsJRq7nn49i2QW2OJPUl99Owvj32NIDiECHYwWBvEqPnS7QnOw
      nYqlkdXTrI6s4+TCkcVeRJJwyS7CrihrY5vwKf6lrCPdNDHNEqo+iYyFpAaQlCBG+gC2kWbE
      7qQw8yKbu+5HCq69oJEZlkmhohP1XbwYWE4XmT0xjm0LWm7tQrpE6mVRL3Jq6jhrk+sIe9+f
      Se+VsGyTn5z4ETOFaWpDdZi2SXWwhoqpEfZGWCgtMJUdx+cOUBeu5+j4YXJaFpfiwi/7+eTq
      z3Bi+hivzB/htqrbsMsmISVIfWMrWrlEY2s7lmkiyTLeS3xvb+QqJcXbPHH6ODF/gIjXR04r
      UxMKc3JqHMOyEIKLNkUKe3zMFvO0hL2sNZ8m2vnHyJJFae4waqWdwrkpin2TyK5RXHEPvsab
      0SoahfEUkWQdnmQMVzQItsDbVINuVxgtDFA08jT7G5GFycGFo+SNPIok0x1Zi5h+kvq2rxPy
      VFPUKyyUFl1oU+Ux+rNnuKHmFtyyB0mSyelZ5vM6lg1uO0fSPMZEQUfRhoh53WiuRiZzRaq8
      FgEVPJGNLJgB4pWDuHwNeJIfQbrCaujrmTk5ji8eIDeeJt6ZxBcPLP0uR8YO8lzf0xT0Alsa
      r+PU1Ak+s/mLrEl2X6HUxftNy6Sg55nKTqAoKhOZMTJamvW1m0iGajk6cZhMKU3YG8ESFhWz
      Qswfx7QMRtLDxHxxgp4g88U53Kqb+eIcJb1EoZLHMHU2NW7jpradzOSnAZjOTpHPZMhOzhJx
      R/AFQ6QLc2TNLBsbt+K1PWiVErKkEK+uwdR1spkFqmvqqUomCYYvPnzj9Z9Hn81gGxaVdAFt
      LocnESGypgG4WqEQQjCTz5EMXbgdx6uPIlgUCSwmu9hCMF3I4VZUJsd+iYcKR8urcKsqFdMg
      6PZQF45S0ivM5LLYkwtImRINiTiZkJvS9AJtwsN0agZfxcIT8CPVxQhaUFLAXRunUZMIt9Wj
      VQXYO9TP6uokbeoIldndjBg19NvrUSWbqlCCuDRHldXD0Ywfv1RkYyjLgmZgGgVU2UU0EEJE
      duB3KaihNUiKH5AuSN55K6ZETsvSN9PD4Hw/EV+U01MnULIS7oQXXdeZzU7jDfpRZRVFVqgK
      1PDwps/iVb14VA95Lcc39/x3/uzO/4xbvXzmlhCCs8ePMjTZh88TwKW4KGlFykGDcDDCidQx
      0maaLcltBAlQsstgg1txMTE/BpZga9d2DNVibHKQpro2LGHRlGhFFCxmj4xSljVidQnKlSIC
      qKmrJzUxTqK6hqpkLcFwhHKxgMvtoVjIgxAEQiFUlxtZli8IwVj6vy0Y/PE+PIpJsK2W4sAk
      +kIONehHqCrGfBbDhGhHEjXkJ9szBrqB9FbnAOWFGfpn83R3dSC/QxNIiMUGbpdHEcJC8bdh
      5k6gz/wSNbgWIQxkbx1m9jhKYBVCn0UAtpbC1/JVKvgxbZug20O6XGK+VMTvchH3B3ErCply
      iaGFOerDUQRwYmqcLfVNRLw+RCqNPptF9rmxihqV6TQiESQ/kiIzkkJ4XbhMG5/Hw3gYNnUY
      BKpTmKUFckaJoNKAJ7ELSUoh+4NkXWtJ+P3IiofFgKEr73Xzevpn++if6yWrZZnNTxP1xwm6
      gwzMnUMzNdyKmzXJbjqqVjOTT9EVXcPoqQGqNtRTKOQJj3hpumU1pmVSMorEfBfG6ggheOrk
      zwiJAFvarsc0DGanUwhF4JLdzBSnOTF7jFWeDmS3yvbNNyEP7gZTQ4SbGE7lcVe1oVcqFAs5
      AoEQ/mAIvaKhqCoSEh6fF5fLzfTkOLlMhkRNDcV8HpDQ8iXMikG8oQa/J4CVNWnZthrTNEhN
      jNPQ0orL9dZTKi3LZm73UXK9YxxK5Qgm4mxtr6JYMHElIgQjHlRVYmY0R9POTgI1i06H8nyB
      zNActVua35oA8guzjEzO0LGmG7f09lMiESaVkW+BXQIUJHcMYWSRfU2oiTuwiucWT6YsnkMO
      rkNUJpC8zYtuzeBaLp0E+e5gmRairKP4PVgVnfJQCmMui692Cm1aodBbRA1HkFUVI1/C1hav
      FbbAVRUmvKkDxedBn8/hroogbBth2RSnskTX1KP4LnR7npg4ynO9T3FL551EvFGqgzVMZSbI
      lbLUe+oI+EJEojHmUil8/gD+UJDZk+MIr0S0qYqKViZ3ap7YxhqKxTyyrGDbNoFQiImRYSpa
      eXGO4nJxcOYgN9RuZzQ7zKRI8cDqh8gbecLuMFqpRDgWJ1gZx9r3P5HbbodAFaSHsKeOIXc9
      AEiIchrJF0Ou24jkCSN5IwgtC8LCzoyBrCIlVlOayRFIxpAUmYmXB4h3VuNNLEZuTuw5Qd2N
      XSg+L1ZJw9IqlMdnUXwejGwRcyEHWgYtbRPZ0om3PkHu+ADFcxO4YkGC61rJnxpmNpUm3lKD
      EU4gWhM8fnAAOVPmYx/ZgDfgYXI+T3drFV5ZoXcqjSwtHjSyqT3JyO4eWm5f89YEUMqnGZ2Y
      paNrNeo7SIkUQoAwEJYGCCQ1vPjv21zmf78RloUxMYmdy2LOL2BXDJREHNsTJn9uErti4E6E
      0eezSLKMlimDLC0Oy36Fgl4gXVog5o0jCYlgIEzJ0DB9CmYygF2eIGAOI3Q/ZWU1FRcEZS9y
      dRjd0BGqSjSZwDB0fP4As+NTeIN+quvrsK3FPOtcJk19UwvRRNVivL1p8MSv/hNrW27m+327
      +f1b/hh/2YunNo6kLJoW1lwflef+C94H/gdy4LXFOaEX0Xb/PyjJdUjBGkRu8v9v78yeJDuu
      8/7LzLvXXtXdVb1MT88MZsNOgAAXSCQtKkwpRCvCepEe9F84/KoHR/jdCi/hCEfIEZYdliyJ
      XkTJonaQ4AoSCzEzAGaf3ru6qrqWW3XXzPRDg5Ip0RI4EAXJmu+lIqq7vptZt07mzbN8Bz24
      iY2PMVlKsneCKR2KooYTSTx3QJkanEYNVW0y3Q+hNLjOGKzBr07Qiaa0XWyR4EVznMgnn2iM
      dXGjjNLtEPgZ+WhMGrfxNy7S+sf/hOT228zvHvOW9nGufprn1peYHw5ZWZ9gKme52df8+lff
      xe2/wS80vspSI2Q0y7g2rvJU0GdhFJuNkKKAyjM//+EFwjB/Xsr3PYzvD6hvtP4sS/SvQ1kW
      bN+5jS5L/CAgjCoEUUSlVkNKRZHnXHvt22yev0BUrTIeDTkZDIiqVTrLK3h+gB98f6Zinmdk
      SYLn+yzmc4wxBHmBPDqi2D+g2N0l3t7GtNsU1mEeCKSSLFVqJDfexrGWyuYmuloltYasWiFL
      Eox3gC5GxE6L0qxQtKqcWb1wmlIdxzQbNfxbX8A/vo5f24DVjxG5R8xff5nCfQrn8s+Q7A1J
      DobIrI/wq8jGBjZfIL0E2TlD8+pjnHzjGrUtSXztJo2luzhBhi1LsBrReYJy2kcwQZU543s+
      TsXDcw7xOjWKWDNe/COsu4RwHYQUmKIk2uyiQh+dZKgowKmFuM0qo69fJxtOMH6F+pUzZIuC
      +d0DnJUWZ378Ml49QE/7iNktAGRzE3QBjQscvX6bcvCAMhdQ6RF127TWFTorOXw7pvuRLfxG
      yM7LNzhzNceMt9FH15kGXWaLmJvv3uLT5yrM+jOOk32mzfNU0z6b9RpuUOPVe7f51vlfZJAJ
      yjhmJX/AIjhP5PtcqC9RzRK83V/7kAzAGPQ7u2AscqUBQmBLzc63H7Dy0XNEq80feL0iz3E9
      j8U8Zn/7AePhMT3nhOr6FXKnQbKYkyYLZuPx6YeE4MzWefp37kGaUo0qLG+eYzI+YXrUZ25z
      vFadsijwg5AknlPMMtqbXfIsQ+7vI77zGm3HQ16+zP58RtqoE66vMRlNqHpVWt1lylCTTReY
      AO7N7nLv7a+zVVvnpdUXUa9+CUe/ivfMzzDvG5ziXcp371DKF8EYok/8ONFLz1C+9ZuIsM4g
      fZHWlS361/bY/MQW2Bz94CsU1/8n2dwgXI9gbQubzTAn2wivhqz3KPbeweQZwnFwVq9iy5yh
      /TFk8yxlpgk7NcJOjUqvgXQkWE156w8RUQfVexKUd+p9OP3i0IsU4SiEUizuH2AKjQo99CIj
      G00Z9IfMNzvkicXvVKBxKqk+O56SWE3QCJmmKXGWIYVglmUs8hyA1Xqdyytdtk9O2B+POZhM
      iAdTXM/BGItRAsdRKEeh5zlhK6IeRfQnU/Jxxqy0nF9rcuXwOt0rV/nG62NU6CHadZ6TlqyM
      MbbGpahFJFx2j0bsjMZE7Rrzccx+OicVhsLqD28HuLVznZ29GyTjmMB6OFLSFcssm4jc5hSt
      kEC4FKFDOptwkMfcGd+hG/Xo1ddYbBes9w45eu03cSnpPvd5/mD8JJ6SfOL5i4SuoDX6JsX1
      /85scsggGdKt9fCLCifVS9xsLrPeuYweTWmETQaLEYFRLMklGrWI6Z/+LqKUJE9fon35KTwc
      Xu1/hzRbcLvY5XgxwgiNKKHabpGQ0446XFy+zAubH6cy3qa4+SWS3W0aP/tLyOoS090TksGU
      dvQO+au/gvAqlKMhMupgdI2yfJLpyBDmQ7KTGLdegSzFOD6p38T7+KdYfekqTnBaL23zDDOd
      oZpNUBJbFAjXg/diCabUZLMUvxawGMbM9sYoV7Hy1MbpfTD2B8YP+tf3mO2eUD/TZunqaSpD
      aQyLPOOr9+7yp7duUgsClq1PlubUeqd5Po6UOFJRcV20tdSUi18KtDaEKOwwQfkON3f22Uln
      nG22aFiHrWaTRX+CE/hIXeIIQXVrhfksIZ2lmEXGXEEyS6l5PlXXQVvLbDgB33K20+BOs8U7
      RnJmkSHKMWtpiV+rc7DkkE8HXPWWcaseioLFQkGjgo5nH5IbtCw4/OV/TbaIsXGM63jkucGP
      PLKFof69qiytwUJsBHJvl345wArBigdl44hGIDl4sEHkV1m5nGLKB4CkMJZ8eoI/8Xknf4Zt
      bZg6hsjLeXw0pdkYQ2vG1Aj2xsskjmTabdM5HNEsBCtpQPhTv0C8dpF66DEZHXN7GnOh1eVg
      vECPZlSVJDMG3yZ8pD6l0uuiOz1M0Uc8+BJ2MmUin6N25TNEl9Y5iVNyY7H3BjiBi6BkMVjg
      VnxaF3tM98e88XtfwXNKqi++gD5JWK2EZOM5ricpbr5NtHeN6NmnEZUq6ZtvkJ3E5E5AnswJ
      IxedG0pfcOPcVZKLWxyWKcN5wnZ/QgWLdF3WQp/ORpt4MEOkGrEScTSeYtIcjwKUIh9Nsbog
      UxFO5CMcRRmneEjOqiqf27qEWRQkJ3OEK5kUBRNHcbbXoF4Y5DwjzUvKef/c0QAAFy9JREFU
      QiNchyDw0FgOpjEXO3VqVY8wcslCF10Yrl27xev3X+PJS5+i4boUeYkMfeZpzrqA0JZ4UYgx
      htEoxgs8Vi/08JVFUpAMDngz6PJ4vM19f5l+fRlTaC4ujtjMJ0zqbbwiP9V6jSIYDUGX4Lgf
      UiBMG377azcRAlpVn/7JnNfe2EbVAhYnC9yqj+uq0whuqWnXQh5fqfGZ9Qbu3tdZ3P9fVD/1
      z5ntKGortdMVz57qWqIk0nUQ7QhrS/LjEUdv7SPyhPpGnXc6G5zkKUYUZLd+kydG36ExTShn
      EXF7zsCN2HQ7aKfAzXMy7xL32x+jLlaZjwcsypLz7gGBPsQpj6DoM5frFKQoFuzmNSr1j1FE
      j9GLPBxXUam4JGWOyQXaCKoGFqUmMZrXJhPeSWcsSk3oCqqupep6YAX3Zhm9wOOwzNhLEzxV
      UjcLEA4ohZAK6/msrJ1nEY+Z9w/AGKpa8thkQXc+o56lLMIWcXsVdzpAlTn1xTHkC5KwRi+L
      cQuLtYAXsljpMts8T1lrUDnao/P2mzi6JLcKkAgMjU6LoLeOUQ7S9fCaLejvUUzHiFqdo2qb
      c3Wf8mSMrFVY7O2f6kjdv8m7T71E3Ntg841XWDl6wLB5lpNRn9K3qLCDQmLCkFxFTJs9Ns2U
      /MZ1wsuX8ITB3b5FpRkRXDhPOV9w+OwnuZe7PHPrW1SGh4goYrbIUY0Gr288her1aBzvMR1N
      cT7yHOVwSLTU5vztN6gNDz6kHaAo+Pav/jK70zPs5AFeUbDlKVrrbcrZgo57k45zg7z0GQ0E
      De8Y6SU4UpFkPR7knyTsdlkMYnJlSaUltiXzeYINHCqtKoERqE6FmS5JshxCF5MWvF6MmMwX
      uIHHervJM2sb5JMjijsvo9c/zWSmCXOotQPcoweUepfN/BrrlBwYiQF2RJN5sUpqI0amRyFA
      i9NH6DxwmCqL6ymKwlD1ThvSOb5LqCTpOAYsrrSUuaGaKzb8KvUw4Gh8yIPBDp9/9iU8z6fQ
      BeiSunKoKgdX+yTzksx1SKMq/TTDrqzwdHzEfqWBs5iilKYMqnizEZG2LPs1BsYSSwdtNFYo
      1rCslHPSyZjh8gYJLvuuT+r7nAktq/kCNRux7VWIZYXHH7xBbWkJR5eIPMX2lkiHJ5g84WTn
      NodpjY1Lmyw3SvT+MePMwwQhjWYNdInbaJBW6ryZ+dR6TR5fb/GFV65jrMPy6ir9wyOUKBkP
      jzl34THuvnOdUijKLGVraYOfOFdH3buDzXNqP/1TnJSC4fWb3FxIdo7u8biTMbh7m+WrV5HZ
      iOc+ssTieMR//d9v0tta5WefbmC8Ljv7h2RyTquW8K78FPpw8eEYQJYX/Np/+hd8LHmTa7qN
      R8kGI2bWo07BkbfKb6jH6EpLy865IztkIsCXCp8A6cvTpCbhUpGKFSWo2BJXWFwhyG3CXIMv
      JW7RQLgTlBDkpYu0HlL7+Aa8LEFT4kiLcjRhEOEqD3eljTedIEuBOrPGwaiPcixXV88TOi7z
      JGEgNG6S4VtFKCSe1WTSIPM5vVYTt9lGYBFRhWI05s6kZOL4XPANy82Q7d0dqhY6S8voIKOM
      b/Bbf7LP0taTlH6FzQuXMEd92kzph0v0p2PAY3c4IRkfc25thYCSMJ4yOzikVWtyRwUs9VZ4
      em2DXS1ZGMhyTS+QNMQBQXZIWVnjVtplFs+JfJ9uK8Jow5maQ0MaEkfw3S9/kaX0JrosMJsf
      59Vpl/WlOkF7lW5FsVpziAt4a++E5HjIhl9wbThhuVMjEJrdKaytLJGmOSLwARc37dMavMFV
      f8DheEYtELx6VGG5t8o3Xr/F5z/5BL/xR9+h22qx3mvxsSfWmB7dIcPhdvdzBLUunoJpMseb
      3yDMFzQWHr/1x3+AsJrPPt5F6wFbm4bpfI2vvrNHr7HB7nDB5XWJEX0+fqaC5y2xczimGXhM
      xQ+hDfo3aQB5lvKr/+qX+dxTH2Hn7lfYG4956vGfptOoMVYVAusT5inGCHybY6XCComyGp+S
      vFbnPh4HCHIkz8y3WRFDjC+RhYuREQhDaRXKVjFSYuoNZJHjUqBLibEHlHaKsSlKeMztWfac
      FQoEEkuY7HEu+Dq4C4bzE0ptadcuM00z/uReFWf5GdorIVKkOLrGOd6kzpjDSUynmiP9LrHp
      EovHuW9hdPtriMmAzY8+jzZnOZoMsMqh3aojzYCyLBhOHDp2j/HhiM9eyLjRX7DP4zy7FLCp
      bnD76IBvvzvBd0K2Vn1euAxRUidOYrQTU4aCOMmohxWUElhhUHiEeYhlyMykNFTIydzjRE6o
      eB4VP8IXdcBD6g53+7us+TFBaxVLghE5eak5Nmto3Wcmn+DaqMV8HnPFfJPnL8R4SlImBY6t
      YKqPES0eYNSCwlEYabG6RMwUEyfBcxxKFtSjJnbocqxnfPFb8LmPlLxy3bDZsdQ9g8g8RKCx
      MofSoxQRUyNxihmKjDSbY2XJNMtPXbyli4PC2IxceyRS03RTtDiNhAdujrAO0jEIq9BanDbc
      +HC8QIYv/NqvME5LkmCdZtQgD6ustWK68ibbyQWWzQ4b5hp5/TEO5RXivIa0GbZwMUHBMre4
      NLvOxBN8N/x5mvYOhQ1IqVHjGCk0PnMmdo2DuI1DAk7EerBDSp1cVBAqBKeBsZrieMLg9lf4
      7Pkc7W0wGFU5Xl1Fm5ST2KNWlUT1dSLfp9XfYXX8Dfqzu+zHKduTGo3nfo5JkmO1QQUBl86f
      o65GvPX1L3NG3+T5Nc1//nrOL/7cM6TBFl/4nbd46VOf4bvf+hMeO7fCl792g5964WOcVbf4
      9ddP+PlPfxRZ7rCon8Nf2mI0tfzOF3+XH//0C2yd6fLF3/sam9zj+Rc+SRkomB0zGfa5c2J4
      8GDKc89u4boWXeZwsM0kiQjEMZlToAqfVMQcjCUIydZ6iRaCJLaMxy62ULiBB0JhixlCRUgt
      WWQZx5lmPLXUXMPUOFxdL3GtRRiDsHVs4EGZgVWUWjKbTWgtr+LX2nzr+l3OrS3RXWozPt7n
      5u4IgWVtucIzKwYp4Q9uaj7TTXGLKaq5wFk5iwmbnBy8jS0KMjnhZJZTqh67/YjPXl5Qzk64
      lbbptQbsH7VpXXqMteYq3uyE2FR5ddvQOXOWB2+/w/Mv/hiqt4Un5kyP7n1YukAFX/3T/4E4
      2eV8Pcfzc96512dg11iRUzqR4qD9HPfVZTZHL3OxfIMmC3SZgTHsniTklR7L7WU63phhf8Bv
      D57h8yvvcm3iMZBn+LHuIa/pl7j3YJ9NccSnnj+Hqxxevp2ysn6eIKrS8C3nOordnR2+9OU3
      +MmLkjPhDON38Ear2NURN+/t0lpaoeJoVFBDOR7SDbm3e0QY36MbFQg3RK0+y++/epcds0HD
      Sbn69LO02kv8t9/6Iv/0CcHttMt37/T5/OMe/fAKL7/8Che3Ntg7OkYnc6qhz6Vz64hkyM1p
      wNm1ZWquxs6PyRsXeO3aO2zUXVqtJmWpKYucWztHtFZWqUhNoXy8csLxUZ+GSojDDQp92ksh
      nsZcEIJObx3/fAc5ucutY8HO3Ac/Qnohpsiwo12WNtZJ5gs+8+w6/sZTBKMbjPsHvLFryJ0a
      qYbLPUW7s0QxHfDq20d87ukarD1PkU3QyZjBwYi9GWytCkJnQRQI0skBb995QC1weWxzncNZ
      ynh0BxmEdFa6lOmMKJtTGsPESlqFR1kLiZ0C6/bIKk8w3etzsn2EVS24cJ7pTkLzmY+RmzHx
      /R2WHr/K0Stfpfn0T1JxYKMd0XA0/bnGHQ0Ii4z7926w8fQWNb/FN7/zxofkBSoLXv3DX8er
      L7M6OiDa7ZMYReIo+r0Gnl6QpzO+MdvkeAF131JGa+giY2//AJeC1Spk/jKL+QwjHcbzElkm
      ZCVIW9Jx5ozKCqWFrjs/Ta8uMmpMOcgjGq7GLycsqZRDuYwtMqxyWJJz1houiahisaSjQ05K
      FwfDSqvOS1EF5bhMCod+tiC2hxgUuVNlfzglWNok9Bx2BjPKoqC33MbFsFyN2JvMkGGNcf+A
      5sXniEIf6QXIfMq08LnMnLX5guvDGfdXz3Ph4hbz2YybX/tjLj77NP5yHV+7DFJBmXmsn+yz
      u79P+PxztNY83vrt32Gp3SCJj5hPDnErAUkR0TxzgfL+Labd56it1PDcnOPrN3n84jrLToxR
      EcN0xnxyH20r1OOcB6aFs1zHJ+Nwe4S7fIlm/QTBhGyqcJO7p2nrZgHCIpQPOkVbSa5dKs6M
      SdlGa0VmArASOj75icUxOa7rYTuXmOk6UqRcNB4r8ZQ3pcdcWophwronGQSKsXXQuYXSUHMd
      2vUAW+QsGU1HGvJA4aclXz2eUq0HBI2MQV5ymJagFdadgShPxwCgI4QOMCL/cAwgSRf80r/8
      N2AUF2pt7kyPyZRHTVU5KQtSCkBwtXLIYjLBEZpJO8PxAs6UVXpGsZ8UsKGg06GHYXB/m1mZ
      o85fYWJcvLtvE87nPH2pw4PdjEWaYVZ7zIclZc2l0CHD1ENIhzDz0SJn6ISYhSFyHBwKUlkn
      j6e4vocpJTVhqYVVknKCFSCNZi7Bei0EkE9P8Frr2OIExxzjuAWR1RSFIdFVlMgwKLQRBE5G
      gWJMRCRims4JCxNirSRyT7A6oCybCAxKztEmIJZLNE1C3Z2gZU6ZOZyxe4zkFg/SDie+5kp9
      iXpSMiw0yALrJExcS0t5bAqwJ4pXswVhp4atwpnU0kwCpIVbZs7yQlMpMzZ9h35Y5dV4Qdix
      tFZCgtkAVYScJSIkYje0oCUyLQjSEq0NaT2k4zjYuGTLN0gB0pecaA3GsmYtcdXjyGiUZwkd
      TbRQzGJL0czZqJ7uWp40bO/M2FAdvjnY5fELLZabEVoneHnAN5I9+vmIHc8ntyXNEnpGcEOO
      ecF2CK3C6IyXi4gT7VLLC6QjSKoOXhHzE67DXfshxQHKbM5//A//jH6RUK36PJARoc3oqSE9
      nfKyCXF9H8cc4liDEXWeYhm/THm9GkFhyKQltyO28j77ooKvlog8j05SsmodvqHmTB2JlR5W
      RlSzXVYWc3JfIwFpLTPpEFnNWFZBVQjcZSZCEi1u0jUxfVHFkT0MJYmpsLALfNeQuDWUnhMW
      A4SQdHVMgSQRigKFlTVc4TF2FKFJT4sypINXTnFsgcEBJJ5aYRF18UxB0xb4wqW0mkB4JOWc
      NI/JbUJFVLECYiVwjMY4AiUsurDI8lR1ITOCE7mg4VSRQhJKH0+4GAyxWVBYjbUubllyPF2w
      Urdo4aGMwjGGthsRk5MhsSZDWk2VCoMsp+NDy2kgLBzoKb7wWHgOhS3omgLXakRuQFaRwmVK
      SuwYcp2SGwM2x7ElsfVouD5nbYuRnmM9KIWDCEIKq5nrlLJI8JUg0xZpS6plRF25eIzITEFq
      qpg04aPZiCvFAt2o4FqHIgwolctm8ym85jmMHmCKmHL3NRJgJissixSJBmNwVROv8uQPZwDW
      lBz2R6z2Vj6QARRZxrU/+i9MHMlQegR5RrPM2Q5qPDOPWZ+lqMClJGFmNSUh1nV5u1LDm8ac
      MymyUuXdao3J0TVaffjE6iqB1iwKy8B3ebVWZ1ZqrLVUgojmbIizuEfV71AzBdd9j3HYZpxM
      aGeKQAVYY5jVWlyaHVLPj1mzDYYmYOi7iGaFTEqmQnIYp1R0jlcLUZMhj5UjatYhEB4nyiNy
      a2wHEXs6w01O05EXUZWzNuVsPOYx4TKThu9W2xzmBQ2TIrCclLxXXWwxVnLOaC4JmCrNG0aR
      CUlqT129JQJtNHVlOOMVVKTFxXJQOhwVEhCUWIx0mbt1hCnI85RFkVMVmi4OE2kYaIkQipme
      4wmFQtBwJA6WEo0rLC0np6JSFlqxYn0yZZHCAg4VFSOFZWFyQhFSVRYpXErrU2qDIyylFTjC
      4ruW06ZACQIfYxUZDkL5GF2gjcYXhsIKFKcZALm1aGvpKsP64ISqEShfIYxFV6t4WxssKJFA
      VXgU5ZxUnCbMB9Ij96uMHIWQDo5bQ5ucphFkAraZ/3AGsL+zDbqgun6BmvMBDsGm4O6NX6U0
      OdJoXCFxhHMaZyx8xoucwHEYaodWGFBRCcgEVzgoo7HqVORJac3RLCdOc6Tj0arVUDImNws8
      xOkKaEpcoUhzyWyeIrEUjk+lUiCFRViLLxwMAtcJcKzFIEkySWkMgSdxHYPBUmJOV2gchHRA
      OmSlIteaQpcIxyFjhMJQlQHK8fGFhytdEJJJmXA895hkBcvNFk13BrYgtgXKCfEsBE6ELz2M
      LkhscfojdgMirREIpDUgFK5QIB0WNmdHZCQYpHRp4+KXBUkxA6AiXNZVHeFEp2PmtBotLmbk
      UkIxxxqNbwWFBFcFZFKBVFhdoIVAOx68993EwmCtwVMhjvIw0sGRLkU2JZMC4QQYLB4SJR0i
      t44CBBItTgUPCnPaU2FRzqkIF1MmGKGI3CqlEFRVhJQOnjZkZYwrHBzlU5icuS0QTogrFCEO
      UnlgilOPlRO8VyryZ3V3f7M1wccHu+wfDrj09LME8oNWhH3/Zb+vgonTKXzv9a+aRGk00zSl
      5gc4/49iet7jOo5nTNOE1XqDiuf/X3/5c34hxF85tr/43g+ay/c4f9C4T+dnEe/j5jzCjx4/
      3CPQe+V18j3ho0faoI/w9x0PdQj+3o//B73/flc1Y8yfabe8n+u9H97vTeX9/u+HOdZHvD9a
      3vfL+VDiuEKID7Tyf28S73fSPwwvfPAmCn8RP4qxPuL90fK+X86HdoM+wiP8/4C/NXn0JJ6w
      1x9j8hmFddBZQlRvMh0Peezyk9QfsvnzYjbmYDClTCZo4VJkCVGtTh6fUFk5z9Zq+6F4j7Yf
      QBiwv7dP4CqSzOC4DtYaLl59ksh9uBXrYPcBJ9OYsijxfJ90Pmdp/QzJYsHF81sPxYkuuH3n
      FmluybOcSr1CkmSsdJocjWZ85Km/XhDrB/Pm3Lp1i7SAMs+JGlWSJCd0LNVWl/Xe8kPRJvGY
      GzfuUOvUSFODL07TSSjmmGCZK+fXHop3cLTPXn+MJwqcICCeLJBKIIXlzKWnaYZ/+anlb02G
      Iaw2qIYeK8vLTGdzVpZaTGczQtdlOBo/NG9Ua1IJ3FPeeMFyu8EiLWm0u2z2Hr4BRLuzhOP5
      LNUrlMInVCVhrUG2iNH64TdNqRSbG2vUOysU6Zxut4t0Q6rhB9D/F+AFNVaWGvRWlljk0GlU
      kcrB9354vZ3v4w0bLHfq9FbaJKWkVY/w/ZDjweChaa0VrJ/bwnd86hUfP6rjuopqrc3Fc6sP
      P1wh2draJKw1USalvbJKrV5Hp3Py8i+fWeFvcQeIJyOmsxjVbHDlyhWy2YirV64yPNxj+SFX
      EoDZeMg0ntOs17hy5QrJZMjli5ugyw8kEjscD0mtg+sGXFrvcnR0THepSRQEVIOHP//osmA8
      L4gcy+oTzzDoH9FwSvaGczrLBs/54dckay15llCt9yh0zJOPnWEwmeOSs7T08L0HjLHk2YJ6
      c5V5HPPE1hLDWUYgC2rt6KF5rTVMRiPW17sssvd2AL+GJy3qA9wzrUumJxOaUYDbvcps2Ke9
      torjRyzXfnDbqkdngEf4B42/H0pUj/AIPyI8MoBH+AeND6VJ3iM8wvvFv/33/46f+OSTDKYt
      lpd8er0Ox4Mp925fR8qI3vktnrhwjt3dXXbffQPbvcps923ywuGFF5+m0PDmt1/jxU+8SGFd
      1rvf7xV8ZACP8Hcam82A3UQwees7+M9f4JXr97jciwirLUIBg4MD0o0qr3zp93HXL/P5Jy/w
      nXiATGLeuXuXo/4JG50O3/zal2mvXfhLBvDoEPwIf6cxmYwoS4OjPPYPDlhd6yEAncXMC5d6
      1adWr7O7s0uzUafaaHDw4A7arROQkgoflce4QUScGc5vfn+M4ZEBPMI/aPwf1fIuVt2YFHQA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='National_seasonality' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Provincial max/min' width='192'>
      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
      7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Provincial_MRA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Provincial_seasonality' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V7MkWZLf9/MjIjKvrKoWNd09egVXYEGYwQwPBGnkA2k0mtHIV35UqgcA
      JGFcI0EsDAtgd7A7uyN6pru6q6qrr8iMOML54CciI+/NW1UtalqVm8UNlTczhKvjx/3voqrK
      a3pN31FyX/UFvKbX9FXSawF4Td9pei0Ar5A+ffRbnm0yAM+ePdud0Mpf/fXPuMv3fPr06WJP
      5/3h4mM++OSaf/3//DmX18/4i7/4t/zL/+tf8He/+pD/8G/+3/m3btLP/uqvKK893YMkr8cA
      r4Ye/+bv+T//j/+bh7//h/zHv/kVfX3GT370Y/7yFx/zP/3Xf8ZfX/R8+G//HScnirz5U9JH
      v8aL4s/fJoRAuXpElgD03D9b8Yuf/SXnbz7k5If/iA//3T8jHr1FqSOPnzzhve//mOGT33D6
      3p/ypz845f/7q1+zffYBD995lzEJR73j+J3f40dvnnzVj+VrR68twCsirZXV6Rmbqw3vvP0m
      P/2938N1a/7Rn/0pYXVM2X7K06cXhBD5yU9/AgJv/ODHPH70iOMgnN1/i/OTFYJALfQn94jB
      c7KKvPujPyB0nnffesBPf/ITOl+hv8d49YSnzy4QgTfun7EtgQ8+fsJRgD6Gr/qRfC3pc1uA
      6d9E5Eu9oO8K/fa3v+L46AFn58ev/Lfef/993n3vPV6/qdv0hQRAVXHutRF5Td9cej73qvLr
      X/ycp59e8vO/+RlX19e8/9sP7xy8vabX9E2j5zqGqoUPHj3mD++f8eTZiI8f0UnlKikrKagq
      tdbf1bW+ptf0pdMLRkbC/bNjfvvhM466wiefXqK58OD7ghf/2gV6Td94ej0GeE3faXrNva/p
      O02vBeA1fafptQC8pu80vZ4e/B3RNNTS9qeqMubCmGzJpZJrpZRKqRZdK1XbtlLm/UqdjqnS
      R8/xquN4FTk77jlZdwTvcG2C8vVE5fPptQB8QaqqXFwPPH52zZAK2zEz5sKQCmPKDKNtDynv
      MXwqdW82XQSEtn4Jpr05E69qwqKqBO846iPrVeS4jxytIkdtfbzqOD3qOD3qOerjS//et5Ve
      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
      TexOCb/+8gVuF7R49613MLUR77z3HjZmFosW2Lt2G+74AF8/eIFZs4GmNti7fg+Hz36LzVvL
      lV7furWHI1j4Y4c7N69jsr2PXTg8mi9w7613Tr13153g8LiDjwdoO4ftzQa37t7G468foKnP
      BsTcu3UPjx8/w/6mhbt5C1uzCe4/fIZbt1YMOGndySGevjjCzHoceYPbd9+EO3yON999H9Pq
      9IETfIuvnzzHxmaNB0cON6/v4emj+3jn95aroGs7PDgAGYPDgzleHB5hb2sTxycnOHz+BI4a
      7G42mO3s90ToqqrgXIfNjR1sb27iwedf4cZbd+COgdnNe9jY3sVkewM1eLYIgXB0dAQQYWM2
      gzEzzF98gnpjFyDCzZs30Imtf9I0aNsOs80d7F2bYba9i0omq+nGFqjrMPcE71s06OBogttv
      vIW9nR1MNiYACPOnDwECbtx9C3t727h15xYefPEJvj522N3exfbeFN3hM5hqgvfeeRP7O5vY
      BwEnz9AcH8PWE7z/7lv4f0vGvhi7DUKYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      gbRsvQTD5kMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
